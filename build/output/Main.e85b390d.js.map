{"mappings":"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AA,EAAAA,GAAAA,cACJ,SAAC5F,UAAwC2F,OACxCA,gDAKCjC,QAAAA,IAAAA,YAAqBC,MACrBC,QAAAA,IAAAA,YAAqBC,QACrBC,oBAAoB,sBACpBvD,QAASqF,owCCtBFC,GAAAA,IAAsBC,IAAAA,CAAa,MAAO,2CAEnBzU,MAAM0U,KAAaF,mCAE1CG,GAAAA,IAAuBF,IAAAA,CAAa,UAAW,iDAEvBzU,MAAM0U,KAAaC,oCAE3CC,GAAAA,IAAqBH,IAAAA,CAChC,OACA,KACA,KACA,QACA,MACA,QACA,OACA,KACA,KACA,SACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,QACA,MACA,WACA,MACA,UACA,KACA,YACA,MACA,QACA,MACA,MACA,OACA,MACA,QACA,IACA,MACA,OACA,MACA,QACA,MACA,OACA,SACA,MACA,QACA,OACA,OACA,OACA,KACA,OACA,QACA,OACA,KACA,KACA,KACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,UACA,UACA,MACA,yCAGiCzU,MAAM0U,KAAaE,kCAEzCC,GAAAA,IAAsBJ,IAAAA,CACjC,IACA,MACA,KACA,OACA,aACA,KACA,OACA,aACA,MACA,OACA,SACA,cACA,QACA,SACA,QACA,UACA,SACA,WACA,YACA,WACA,QACA,OACA,UACA,QACA,iBACA,SACA,MACA,UACA,MACA,UACA,UACA,UACA,OACA,YACA,SACA,MACA,OACA,UACA,QACA,KACA,WACA,QACA,OACA,SACA,UACA,MACA,WACA,KACA,mBACA,cACA,mBACA,UACA,SACA,QACA,UACA,WACA,cACA,cACA,SACA,MACA,MACA,SACA,OACA,QACA,eACA,OACA,MACA,cACA,eACA,WACA,MACA,UACA,QACA,yBACA,UACA,UACA,UACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,UACA,QACA,QACA,gBACA,SACA,aACA,KACA,MACA,SACA,aACA,MACA,SACA,MACA,UACA,MACA,aACA,UACA,YACA,UACA,YACA,MACA,yBA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","sources":["./node_modules/content-type/index.js","./node_modules/unsplash-js/dist/unsplash-js.esm.js","./src/service/UnsplashService.ts","./src/store/action/carousel-async/ActionCreators.ts","./node_modules/uuid/lib/rng-browser.js","./node_modules/uuid/v1.js","./node_modules/uuid/lib/bytesToUuid.js","./node_modules/uuid/index.js","./node_modules/uuid/v4.js","./src/store/action/carousel/ActionCreators.ts","./src/page/main/image-carousel/Image-carousel-elements/ImageMoveTo.tsx","./src/page/main/image-carousel/Image-carousel-elements/ImagesIndicator.tsx","./src/page/main/image-carousel/ImageCarousel.tsx","./src/service/LectureService.ts","./src/store/action/search-async/ActionCreators.ts","./src/store/action/search-bar/ActionCreators.ts","./src/store/action/search/ActionCreators.ts","./src/store/action/search-suggestion/ActionCreators.ts","./src/page/main/search/search-bar/buttons/AddButton.tsx","./src/store/action/search-result/ActionsCreators.ts","./src/page/main/search/search-bar/buttons/SearchButton.tsx","./src/page/main/search/search-bar/buttons/ClearButton.tsx","./src/page/main/search/search-bar/SearchData.ts","./src/page/main/search/search-bar/hooks/useSuggestion.ts","./src/page/main/search/search-bar/hooks/useSearchBarSuggestion.tsx","./src/page/main/search/search-bar/hooks/useSearchBarSelectedKeywords.tsx","./src/page/main/search/search-bar/hooks/useSearchBarSelectedPlatforms.tsx","./src/page/main/search/search-bar/hooks/useToggleSearchBar.tsx","./src/page/main/search/search-bar/SearchBarInput.tsx","./src/page/main/search/search-bar/SearchBar.tsx","./src/page/main/search/search-ctrl/SearchCtrl.tsx","./src/page/main/search/Search.tsx","./src/page/main/search/keyword-selector/KeywordSelector.tsx","./src/page/main/search/keyword-selector/KeywordSelectorCtrl.tsx","./src/page/main/search-result/SearchResultSummary.tsx","./src/store/action/bookmark-async/query-all-bookmarks/ActionCreators.ts","./src/component/backdrop/Backdrop.tsx","./src/service/CommentService.ts","./src/store/action/comment-async/add-comment/ActionCreators.ts","./src/store/action/comment-async/fix-comment/ActionCreators.ts","./src/store/action/comment-async/query-all-comments/ActionCreators.ts","./src/store/action/comment-async/remove-comment/ActionsCreators.ts","./src/component/comment/comment-element/user-thumbnail/CommentUserThumbnail.tsx","./src/component/comment/comment-element/user-name/CommentUserName.tsx","./src/component/comment/comment-element/contents/CommentContents.tsx","./src/component/comment/comment-element/text-area/CommentTextArea.tsx","./src/component/comment/useUserData.tsx","./src/component/comment/NewComment.tsx","./src/component/comment/comment-element/createdAt/CommentCreatedAt.tsx","./src/component/comment/OtherComment.tsx","./src/component/comment/Comments.tsx","./src/component/lecture-popup/LecturePopup.tsx","./src/component/lecture-card/lecture-card-element/bookmark/LectureBookmark.tsx","./src/component/lecture-card/lecture-card-element/platform/LecturePlatform.tsx","./src/component/lecture-card/lecture-card-element/price/LecturePrice.tsx","./src/component/lecture-card/lecture-card-element/rating/LectureRating.tsx","./src/component/lecture-card/lecture-card-element/session-count/LectureSessionCount.tsx","./src/component/lecture-card/lecture-card-element/thumbnail/LectureThumbnail.tsx","./src/component/lecture-card/lecture-card-element/title/LectureTitle.tsx","./src/component/lecture-card/lecture-card-element/view-count/LectureViewCount.tsx","./src/component/lecture-card/lecture-card-element/skills/LectureSkills.tsx","./src/component/lecture-card/lecture-card-element/description/LectureDescription.tsx","./src/component/lecture-card/lecture-card-element/language/LectureLanguage.tsx","./src/component/lecture-card/lecture-card-element/instructor/LectureInstructor.tsx","./src/component/lecture-card/lecture-card-element/goToLecture/LectureGoToLecture.tsx","./src/component/lecture-card/GridLectureCard.tsx","./src/component/moveToPage/MoveToNextPage.tsx","./src/component/moveToPage/MoveToPreviousPage.tsx","./src/component/pagenator/Pagenator.tsx","./src/page/main/search-result/view/GridView.tsx","./src/page/main/search-result/SearchResult.tsx","./src/page/main/Main.tsx"],"sourcesContent":["/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","import { parse } from 'content-type';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar checkIsString = /*#__PURE__*/getRefinement(function (value) {\n  return typeof value === 'string' ? value : null;\n});\nvar isDefined = function isDefined(x) {\n  return x !== null && x !== undefined;\n};\nfunction getRefinement(getB) {\n  return function (a) {\n    return isDefined(getB(a));\n  };\n}\nvar checkIsNonEmptyArray = function checkIsNonEmptyArray(a) {\n  return a.length > 0;\n};\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\r\n * (non-nullish) values.\r\n */\n\nvar compactDefined = function compactDefined(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    var _ref;\n\n    var value = obj[key];\n    return _extends({}, acc, isDefined(value) ? (_ref = {}, _ref[key] = value, _ref) : {});\n  }, {});\n};\nfunction flow() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  var len = fns.length - 1;\n  return function () {\n    for (var _len2 = arguments.length, x = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      x[_key2] = arguments[_key2];\n    }\n\n    var y = fns[0].apply(this, x);\n\n    for (var i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n\n    return y;\n  };\n}\n\nvar checkIsObject = /*#__PURE__*/getRefinement(function (response) {\n  return isDefined(response) && typeof response === 'object' && !Array.isArray(response) ? response : null;\n});\nvar checkIsErrors = /*#__PURE__*/getRefinement(function (errors) {\n  return Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors) ? errors : null;\n});\nvar checkIsApiError = /*#__PURE__*/getRefinement(function (response) {\n  return checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors) ? {\n    errors: response.errors\n  } : null;\n});\nvar getErrorForBadStatusCode = function getErrorForBadStatusCode(jsonResponse) {\n  if (checkIsApiError(jsonResponse)) {\n    return {\n      errors: jsonResponse.errors,\n      source: 'api'\n    };\n  } else {\n    return {\n      errors: ['Responded with a status code outside the 2xx range, and the response body is not recognisable.'],\n      source: 'decoding'\n    };\n  }\n};\nvar DecodingError = function DecodingError(message) {\n  this.message = message;\n};\n\nvar CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nvar CONTENT_TYPE_JSON = 'application/json';\n\nvar checkIsJsonResponse = function checkIsJsonResponse(response) {\n  var contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n  return isDefined(contentTypeHeader) && parse(contentTypeHeader).type === CONTENT_TYPE_JSON;\n};\n/**\r\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\r\n */\n\n\nvar getJsonResponse = function getJsonResponse(response) {\n  if (checkIsJsonResponse(response)) {\n    return response.json()[\"catch\"](function (_err) {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n\nvar handleFetchResponse = function handleFetchResponse(handleResponse) {\n  return function (response) {\n    return (response.ok ? handleResponse({\n      response: response\n    }).then(function (handledResponse) {\n      return {\n        type: 'success',\n        status: response.status,\n        response: handledResponse\n      };\n    }) : getJsonResponse(response).then(function (jsonResponse) {\n      return _extends({\n        type: 'error',\n        status: response.status\n      }, getErrorForBadStatusCode(jsonResponse));\n    }))[\"catch\"](function (error) {\n      /**\r\n       * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\r\n       * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\r\n       * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\r\n       * caught, so that they bubble up and fail loudly.\r\n       *\r\n       * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\r\n       * like `fp-ts`.\r\n       */\n      if (error instanceof DecodingError) {\n        return {\n          type: 'error',\n          source: 'decoding',\n          status: response.status,\n          errors: [error.message]\n        };\n      } else {\n        throw error;\n      }\n    });\n  };\n};\nvar castResponse = function castResponse() {\n  return function (_ref) {\n    var response = _ref.response;\n    return getJsonResponse(response);\n  };\n};\n\nvar addQueryToUrl = function addQueryToUrl(query) {\n  return function (url) {\n    Object.keys(query).forEach(function (queryKey) {\n      return url.searchParams.set(queryKey, query[queryKey].toString());\n    });\n  };\n};\n\nvar addPathnameToUrl = function addPathnameToUrl(pathname) {\n  return function (url) {\n    // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n    // forward slashes. This is why we replace the value in that scenario.\n    if (url.pathname === '/') {\n      url.pathname = pathname;\n    } else {\n      url.pathname += pathname;\n    }\n  };\n};\n\nvar buildUrl = function buildUrl(_ref) {\n  var pathname = _ref.pathname,\n      query = _ref.query;\n  return function (apiUrl) {\n    var url = new URL(apiUrl);\n    addPathnameToUrl(pathname)(url);\n    addQueryToUrl(query)(url);\n    return url.toString();\n  };\n};\nvar parseQueryAndPathname = function parseQueryAndPathname(url) {\n  var _URL = new URL(url),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    query[key] = value;\n  });\n  return {\n    query: query,\n    pathname: pathname === '/' ? undefined : pathname\n  };\n};\n\n/**\r\n * helper used to type-check the arguments, and add default params for all requests\r\n */\n\nvar createRequestHandler = function createRequestHandler(fn) {\n  return function (a, additionalFetchOptions) {\n    if (additionalFetchOptions === void 0) {\n      additionalFetchOptions = {};\n    }\n\n    var _fn = fn(a),\n        headers = _fn.headers,\n        query = _fn.query,\n        baseReqParams = _objectWithoutPropertiesLoose(_fn, [\"headers\", \"query\"]);\n\n    return _extends({}, baseReqParams, additionalFetchOptions, {\n      query: query,\n      headers: _extends({}, headers, additionalFetchOptions.headers)\n    });\n  };\n};\nvar createRequestGenerator = function createRequestGenerator(handlers) {\n  return handlers;\n};\nvar initMakeRequest = function initMakeRequest(_ref) {\n  var accessKey = _ref.accessKey,\n      _ref$apiVersion = _ref.apiVersion,\n      apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,\n      _ref$apiUrl = _ref.apiUrl,\n      apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,\n      generalHeaders = _ref.headers,\n      providedFetch = _ref.fetch,\n      generalFetchOptions = _objectWithoutPropertiesLoose(_ref, [\"accessKey\", \"apiVersion\", \"apiUrl\", \"headers\", \"fetch\"]);\n\n  return function (_ref2) {\n    var handleResponse = _ref2.handleResponse,\n        handleRequest = _ref2.handleRequest;\n    return flow(handleRequest, function (_ref3) {\n      var pathname = _ref3.pathname,\n          query = _ref3.query,\n          _ref3$method = _ref3.method,\n          method = _ref3$method === void 0 ? 'GET' : _ref3$method,\n          endpointHeaders = _ref3.headers,\n          body = _ref3.body,\n          signal = _ref3.signal;\n      var url = buildUrl({\n        pathname: pathname,\n        query: query\n      })(apiUrl);\n\n      var fetchOptions = _extends({\n        method: method,\n        headers: _extends({}, generalHeaders, endpointHeaders, {\n          'Accept-Version': apiVersion\n        }, isDefined(accessKey) ? {\n          Authorization: \"Client-ID \" + accessKey\n        } : {}),\n        body: body,\n        signal: signal\n      }, generalFetchOptions);\n\n      var fetchToUse = providedFetch != null ? providedFetch : fetch;\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    });\n  };\n};\n\nvar TOTAL_RESPONSE_HEADER = 'x-total';\n\nvar getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response) {\n  var totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n\n  if (isDefined(totalsStr)) {\n    var total = parseInt(totalsStr);\n\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(\"expected \" + TOTAL_RESPONSE_HEADER + \" header to be valid integer.\");\n    }\n  } else {\n    throw new DecodingError(\"expected \" + TOTAL_RESPONSE_HEADER + \" header to exist.\");\n  }\n};\n\nvar handleFeedResponse = function handleFeedResponse() {\n  return function (_ref) {\n    var response = _ref.response;\n    return castResponse()({\n      response: response\n    }).then(function (results) {\n      return {\n        results: results,\n        total: getTotalFromApiFeedResponse(response)\n      };\n    });\n  };\n};\n\nvar getCollections = function getCollections(collectionIds) {\n  return isDefined(collectionIds) ? {\n    collections: collectionIds.join()\n  } : {};\n};\nvar getFeedParams = function getFeedParams(_ref) {\n  var page = _ref.page,\n      perPage = _ref.perPage,\n      orderBy = _ref.orderBy;\n  return compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page: page\n  });\n};\n\nvar COLLECTIONS_PATH_PREFIX = '/collections';\nvar getPhotos = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref) {\n    var collectionId = _ref.collectionId,\n        orientation = _ref.orientation,\n        paginationParams = _objectWithoutPropertiesLoose(_ref, [\"collectionId\", \"orientation\"]);\n\n    return {\n      pathname: COLLECTIONS_PATH_PREFIX + \"/\" + collectionId + \"/photos\",\n      query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n        orientation: orientation\n      }))\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\nvar get = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref2) {\n    var collectionId = _ref2.collectionId;\n    return {\n      pathname: COLLECTIONS_PATH_PREFIX + \"/\" + collectionId,\n      query: {}\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar list = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (paginationParams) {\n    if (paginationParams === void 0) {\n      paginationParams = {};\n    }\n\n    return {\n      pathname: COLLECTIONS_PATH_PREFIX,\n      query: getFeedParams(paginationParams)\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\nvar getRelated = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref3) {\n    var collectionId = _ref3.collectionId;\n    return {\n      pathname: COLLECTIONS_PATH_PREFIX + \"/\" + collectionId + \"/related\",\n      query: {}\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\n\nvar index = {\n  __proto__: null,\n  getPhotos: getPhotos,\n  get: get,\n  list: list,\n  getRelated: getRelated\n};\n\nvar PHOTOS_PATH_PREFIX = '/photos';\nvar list$1 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (feedParams) {\n    if (feedParams === void 0) {\n      feedParams = {};\n    }\n\n    return {\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(getFeedParams(feedParams))\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\nvar get$1 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref) {\n    var photoId = _ref.photoId;\n    return {\n      pathname: PHOTOS_PATH_PREFIX + \"/\" + photoId,\n      query: {}\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar getStats = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref2) {\n    var photoId = _ref2.photoId;\n    return {\n      pathname: PHOTOS_PATH_PREFIX + \"/\" + photoId + \"/statistics\",\n      query: {}\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar getRandom = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_temp) {\n    var _ref3 = _temp === void 0 ? {} : _temp,\n        collectionIds = _ref3.collectionIds,\n        contentFilter = _ref3.contentFilter,\n        queryParams = _objectWithoutPropertiesLoose(_ref3, [\"collectionIds\", \"contentFilter\"]);\n\n    return {\n      pathname: PHOTOS_PATH_PREFIX + \"/random\",\n      query: compactDefined(_extends({}, queryParams, {\n        content_filter: contentFilter\n      }, getCollections(collectionIds))),\n      headers: {\n        /**\r\n         * Avoid response caching\r\n         */\n        'cache-control': 'no-cache'\n      }\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar trackDownload = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref4) {\n    var downloadLocation = _ref4.downloadLocation;\n\n    var _parseQueryAndPathnam = parseQueryAndPathname(downloadLocation),\n        pathname = _parseQueryAndPathnam.pathname,\n        query = _parseQueryAndPathnam.query;\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n\n    return {\n      pathname: pathname,\n      query: compactDefined(query)\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\n\nvar index$1 = {\n  __proto__: null,\n  list: list$1,\n  get: get$1,\n  getStats: getStats,\n  getRandom: getRandom,\n  trackDownload: trackDownload\n};\n\nvar SEARCH_PATH_PREFIX = \"/search\";\nvar getPhotos$1 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref) {\n    var query = _ref.query,\n        page = _ref.page,\n        perPage = _ref.perPage,\n        orderBy = _ref.orderBy,\n        collectionIds = _ref.collectionIds,\n        lang = _ref.lang,\n        contentFilter = _ref.contentFilter,\n        filters = _objectWithoutPropertiesLoose(_ref, [\"query\", \"page\", \"perPage\", \"orderBy\", \"collectionIds\", \"lang\", \"contentFilter\"]);\n\n    return {\n      pathname: SEARCH_PATH_PREFIX + \"/photos\",\n      query: compactDefined(_extends({\n        query: query,\n        content_filter: contentFilter,\n        lang: lang,\n        order_by: orderBy\n      }, getFeedParams({\n        page: page,\n        perPage: perPage\n      }), getCollections(collectionIds), filters))\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar getCollections$1 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref2) {\n    var query = _ref2.query,\n        paginationParams = _objectWithoutPropertiesLoose(_ref2, [\"query\"]);\n\n    return {\n      pathname: SEARCH_PATH_PREFIX + \"/collections\",\n      query: _extends({\n        query: query\n      }, getFeedParams(paginationParams))\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar getUsers = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref3) {\n    var query = _ref3.query,\n        paginationParams = _objectWithoutPropertiesLoose(_ref3, [\"query\"]);\n\n    return {\n      pathname: SEARCH_PATH_PREFIX + \"/users\",\n      query: _extends({\n        query: query\n      }, getFeedParams(paginationParams))\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\n\nvar index$2 = {\n  __proto__: null,\n  getPhotos: getPhotos$1,\n  getCollections: getCollections$1,\n  getUsers: getUsers\n};\n\nvar USERS_PATH_PREFIX = '/users';\nvar get$2 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref) {\n    var username = _ref.username;\n    return {\n      pathname: USERS_PATH_PREFIX + \"/\" + username,\n      query: {}\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar getPhotos$2 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref2) {\n    var username = _ref2.username,\n        stats = _ref2.stats,\n        orientation = _ref2.orientation,\n        paginationParams = _objectWithoutPropertiesLoose(_ref2, [\"username\", \"stats\", \"orientation\"]);\n\n    return {\n      pathname: USERS_PATH_PREFIX + \"/\" + username + \"/photos\",\n      query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n        orientation: orientation,\n        stats: stats\n      }))\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\nvar getLikes = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref3) {\n    var username = _ref3.username,\n        orientation = _ref3.orientation,\n        paginationParams = _objectWithoutPropertiesLoose(_ref3, [\"username\", \"orientation\"]);\n\n    return {\n      pathname: USERS_PATH_PREFIX + \"/\" + username + \"/likes\",\n      query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n        orientation: orientation\n      }))\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\nvar getCollections$2 = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref4) {\n    var username = _ref4.username,\n        paginationParams = _objectWithoutPropertiesLoose(_ref4, [\"username\"]);\n\n    return {\n      pathname: USERS_PATH_PREFIX + \"/\" + username + \"/collections\",\n      query: getFeedParams(paginationParams)\n    };\n  }),\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n};\n\nvar index$3 = {\n  __proto__: null,\n  get: get$2,\n  getPhotos: getPhotos$2,\n  getLikes: getLikes,\n  getCollections: getCollections$2\n};\n\nvar BASE_TOPIC_PATH = '/topics';\n\nvar getTopicPath = function getTopicPath(_ref) {\n  var topicIdOrSlug = _ref.topicIdOrSlug;\n  return BASE_TOPIC_PATH + \"/\" + topicIdOrSlug;\n};\n\nvar getTopicPhotosPath = /*#__PURE__*/flow(getTopicPath, function (topicPath) {\n  return topicPath + \"/photos\";\n});\nvar list$2 = /*#__PURE__*/createRequestGenerator({\n  handleRequest: function handleRequest(_ref2) {\n    var page = _ref2.page,\n        perPage = _ref2.perPage,\n        orderBy = _ref2.orderBy,\n        topicIdsOrSlugs = _ref2.topicIdsOrSlugs;\n    return {\n      pathname: BASE_TOPIC_PATH,\n      query: compactDefined(_extends({}, getFeedParams({\n        page: page,\n        perPage: perPage\n      }), {\n        ids: topicIdsOrSlugs == null ? void 0 : topicIdsOrSlugs.join(','),\n        order_by: orderBy\n      }))\n    };\n  },\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n});\nvar get$3 = /*#__PURE__*/createRequestGenerator({\n  handleRequest: function handleRequest(_ref3) {\n    var topicIdOrSlug = _ref3.topicIdOrSlug;\n    return {\n      pathname: getTopicPath({\n        topicIdOrSlug: topicIdOrSlug\n      }),\n      query: {}\n    };\n  },\n  handleResponse: /*#__PURE__*/castResponse()\n});\nvar getPhotos$3 = /*#__PURE__*/createRequestGenerator({\n  handleRequest: function handleRequest(_ref4) {\n    var topicIdOrSlug = _ref4.topicIdOrSlug,\n        orientation = _ref4.orientation,\n        feedParams = _objectWithoutPropertiesLoose(_ref4, [\"topicIdOrSlug\", \"orientation\"]);\n\n    return {\n      pathname: getTopicPhotosPath({\n        topicIdOrSlug: topicIdOrSlug\n      }),\n      query: compactDefined(_extends({}, getFeedParams(feedParams), {\n        orientation: orientation\n      }))\n    };\n  },\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n});\n\nvar trackNonHotLinkedPhotoView = function trackNonHotLinkedPhotoView(_ref) {\n  var appId = _ref.appId;\n  return function (_ref2) {\n    var photoId = _ref2.photoId;\n    var ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n    if (ids.length > 20) {\n      throw new Error('You cannot track more than 20 photos at once. Please try again with fewer photos.');\n    }\n\n    return fetch(\"views.unsplash.com/v?photo_id=\" + ids.join() + \"&app_id=\" + appId);\n  };\n};\n\n\n\nvar internals = {\n  __proto__: null,\n  collections: index,\n  photos: index$1,\n  search: index$2,\n  users: index$3,\n  trackNonHotLinkedPhotoView: trackNonHotLinkedPhotoView\n};\n\nvar Language;\n\n(function (Language) {\n  Language[\"Afrikaans\"] = \"af\";\n  Language[\"Amharic\"] = \"am\";\n  Language[\"Arabic\"] = \"ar\";\n  Language[\"Azerbaijani\"] = \"az\";\n  Language[\"Belarusian\"] = \"be\";\n  Language[\"Bulgarian\"] = \"bg\";\n  Language[\"Bengali\"] = \"bn\";\n  Language[\"Bosnian\"] = \"bs\";\n  Language[\"Catalan\"] = \"ca\";\n  Language[\"Cebuano\"] = \"ceb\";\n  Language[\"Corsican\"] = \"co\";\n  Language[\"Czech\"] = \"cs\";\n  Language[\"Welsh\"] = \"cy\";\n  Language[\"Danish\"] = \"da\";\n  Language[\"German\"] = \"de\";\n  Language[\"Greek\"] = \"el\";\n  Language[\"English\"] = \"en\";\n  Language[\"Esperanto\"] = \"eo\";\n  Language[\"Spanish\"] = \"es\";\n  Language[\"Estonian\"] = \"et\";\n  Language[\"Basque\"] = \"eu\";\n  Language[\"Persian\"] = \"fa\";\n  Language[\"Finnish\"] = \"fi\";\n  Language[\"French\"] = \"fr\";\n  Language[\"Frisian\"] = \"fy\";\n  Language[\"Irish\"] = \"ga\";\n  Language[\"ScotsGaelic\"] = \"gd\";\n  Language[\"Galician\"] = \"gl\";\n  Language[\"Gujarati\"] = \"gu\";\n  Language[\"Hausa\"] = \"ha\";\n  Language[\"Hawaiian\"] = \"haw\";\n  Language[\"Hindi\"] = \"hi\";\n  Language[\"Hmong\"] = \"hmn\";\n  Language[\"Croatian\"] = \"hr\";\n  Language[\"HaitianCreole\"] = \"ht\";\n  Language[\"Hungarian\"] = \"hu\";\n  Language[\"Armenian\"] = \"hy\";\n  Language[\"Indonesian\"] = \"id\";\n  Language[\"Igbo\"] = \"ig\";\n  Language[\"Icelandic\"] = \"is\";\n  Language[\"Italian\"] = \"it\";\n  Language[\"Hebrew\"] = \"iw\";\n  Language[\"Japanese\"] = \"ja\";\n  Language[\"Javanese\"] = \"jw\";\n  Language[\"Georgian\"] = \"ka\";\n  Language[\"Kazakh\"] = \"kk\";\n  Language[\"Khmer\"] = \"km\";\n  Language[\"Kannada\"] = \"kn\";\n  Language[\"Korean\"] = \"ko\";\n  Language[\"Kurdish\"] = \"ku\";\n  Language[\"Kyrgyz\"] = \"ky\";\n  Language[\"Latin\"] = \"la\";\n  Language[\"Luxembourgish\"] = \"lb\";\n  Language[\"Lao\"] = \"lo\";\n  Language[\"Lithuanian\"] = \"lt\";\n  Language[\"Latvian\"] = \"lv\";\n  Language[\"Malagasy\"] = \"mg\";\n  Language[\"Maori\"] = \"mi\";\n  Language[\"Macedonian\"] = \"mk\";\n  Language[\"Malayalam\"] = \"ml\";\n  Language[\"Mongolian\"] = \"mn\";\n  Language[\"Marathi\"] = \"mr\";\n  Language[\"Malay\"] = \"ms\";\n  Language[\"Maltese\"] = \"mt\";\n  Language[\"Myanmar\"] = \"my\";\n  Language[\"Nepali\"] = \"ne\";\n  Language[\"Dutch\"] = \"nl\";\n  Language[\"Norwegian\"] = \"no\";\n  Language[\"Nyanja\"] = \"ny\";\n  Language[\"Oriya\"] = \"or\";\n  Language[\"Punjabi\"] = \"pa\";\n  Language[\"Polish\"] = \"pl\";\n  Language[\"Pashto\"] = \"ps\";\n  Language[\"Portuguese\"] = \"pt\";\n  Language[\"Romanian\"] = \"ro\";\n  Language[\"Russian\"] = \"ru\";\n  Language[\"Kinyarwanda\"] = \"rw\";\n  Language[\"Sindhi\"] = \"sd\";\n  Language[\"Sinhala\"] = \"si\";\n  Language[\"Slovak\"] = \"sk\";\n  Language[\"Slovenian\"] = \"sl\";\n  Language[\"Samoan\"] = \"sm\";\n  Language[\"Shona\"] = \"sn\";\n  Language[\"Somali\"] = \"so\";\n  Language[\"Albanian\"] = \"sq\";\n  Language[\"Serbian\"] = \"sr\";\n  Language[\"Sesotho\"] = \"st\";\n  Language[\"Sundanese\"] = \"su\";\n  Language[\"Swedish\"] = \"sv\";\n  Language[\"Swahili\"] = \"sw\";\n  Language[\"Tamil\"] = \"ta\";\n  Language[\"Telugu\"] = \"te\";\n  Language[\"Tajik\"] = \"tg\";\n  Language[\"Thai\"] = \"th\";\n  Language[\"Turkmen\"] = \"tk\";\n  Language[\"Filipino\"] = \"tl\";\n  Language[\"Turkish\"] = \"tr\";\n  Language[\"Tatar\"] = \"tt\";\n  Language[\"Uighur\"] = \"ug\";\n  Language[\"Ukrainian\"] = \"uk\";\n  Language[\"Urdu\"] = \"ur\";\n  Language[\"Uzbek\"] = \"uz\";\n  Language[\"Vietnamese\"] = \"vi\";\n  Language[\"Xhosa\"] = \"xh\";\n  Language[\"Yiddish\"] = \"yi\";\n  Language[\"Yoruba\"] = \"yo\";\n  Language[\"ChineseSimplified\"] = \"zh\";\n  Language[\"ChineseTraditional\"] = \"zh-TW\";\n  Language[\"Zulu\"] = \"zu\";\n})(Language || (Language = {}));\n\nvar OrderBy;\n\n(function (OrderBy) {\n  OrderBy[\"LATEST\"] = \"latest\";\n  OrderBy[\"POPULAR\"] = \"popular\";\n  OrderBy[\"VIEWS\"] = \"views\";\n  OrderBy[\"DOWNLOADS\"] = \"downloads\";\n  OrderBy[\"OLDEST\"] = \"oldest\";\n})(OrderBy || (OrderBy = {}));\n\nvar createApi = /*#__PURE__*/flow(initMakeRequest, function (makeRequest) {\n  return {\n    photos: {\n      get: makeRequest(get$1),\n      list: makeRequest(list$1),\n      getStats: makeRequest(getStats),\n      getRandom: makeRequest(getRandom),\n      trackDownload: makeRequest(trackDownload)\n    },\n    users: {\n      getPhotos: makeRequest(getPhotos$2),\n      getCollections: makeRequest(getCollections$2),\n      getLikes: makeRequest(getLikes),\n      get: makeRequest(get$2)\n    },\n    search: {\n      getCollections: makeRequest(getCollections$1),\n      getPhotos: makeRequest(getPhotos$1),\n      getUsers: makeRequest(getUsers)\n    },\n    collections: {\n      getPhotos: makeRequest(getPhotos),\n      get: makeRequest(get),\n      list: makeRequest(list),\n      getRelated: makeRequest(getRelated)\n    },\n    topics: {\n      list: makeRequest(list$2),\n      get: makeRequest(get$3),\n      getPhotos: makeRequest(getPhotos$3)\n    }\n  };\n});\n\nexport { Language, OrderBy, internals as _internals, createApi };\n//# sourceMappingURL=unsplash-js.esm.js.map\n","import { createApi } from \"unsplash-js\";\r\nimport { Photos } from \"unsplash-js/dist/methods/search/types/response\";\r\nimport { TStatusCode } from \"../typings\";\r\n// import { axiosInstance_Unsplash } from \"./Axios\";\r\n\r\n// export const getRandomPhotos = async () =>\r\n//   (await axiosInstance_Unsplash.get(\r\n//     `/photos/random/?client_id=${process.env.UNSPLASH_ACCESS_KEY}`\r\n//   )) as typeof Unsplash_Img;\r\n\r\nconst unsplash = createApi({\r\n  accessKey: process.env.UNSPLASH_ACCESS_KEY,\r\n});\r\n\r\nexport const get_PhotoPages = async (\r\n  queries: typeof Unsplash_PhotoSearch\r\n): Promise<{\r\n  data: Photos | undefined;\r\n  status: TStatusCode;\r\n}> => {\r\n  const { response: data, status } = await unsplash.search.getPhotos(queries);\r\n  return { data, status };\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport { ECarouselAsyncActionType } from \"~/src/typings\";\r\nimport {\r\n  IFetchFailAction_CarouselImgURLs,\r\n  IFetchRequestAction_CarouselImageURLs,\r\n  IFetchSucceedAction_CarouselImageURLs,\r\n} from \"./Actions\";\r\nimport { get_PhotoPages } from \"~/src/service/UnsplashService\";\r\n\r\n// Creators\r\nexport const fetchRequest_CarouselImageURLs = (): IFetchRequestAction_CarouselImageURLs => ({\r\n  type: ECarouselAsyncActionType.FetchRequest_CarouselImagesURLs,\r\n});\r\n\r\nexport const fetchSucceed_CarouselImageURLs = (\r\n  status: number,\r\n  urls: Array<string>\r\n): IFetchSucceedAction_CarouselImageURLs => ({\r\n  type: ECarouselAsyncActionType.FetchSucceed_CarouselImagesURLs,\r\n  status,\r\n  urls,\r\n});\r\n\r\nexport const fetchFail_CarouselImageURLs = (\r\n  err: string\r\n): IFetchFailAction_CarouselImgURLs => ({\r\n  type: ECarouselAsyncActionType.FetchFail_CarouselImagesURLs,\r\n  err,\r\n});\r\n\r\nexport const initFetch_CarouselImageURLs = (query: { query: string }) => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  try {\r\n    dispatch(fetchRequest_CarouselImageURLs());\r\n    const { data, status } = await get_PhotoPages(query);\r\n    dispatch(\r\n      fetchSucceed_CarouselImageURLs(\r\n        status,\r\n        data!.results.map(el => el.urls.regular)\r\n      )\r\n    );\r\n  } catch (err) {\r\n    dispatch(fetchFail_CarouselImageURLs(err));\r\n  }\r\n};\r\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","import { ECarouselActionType } from \"../../../typings\";\r\nimport {\r\n  ISetImageIndicatorCurIdxAction,\r\n  ISetImageWidthAction,\r\n  ISetImagePlacerRefAction,\r\n} from \"./Actions\";\r\n\r\nexport const setImageIndicatorCurIdx = (idx: number): ISetImageIndicatorCurIdxAction => ({\r\n  type: ECarouselActionType.Set_ImageIndicatorCurIdx,\r\n  idx,\r\n});\r\n\r\nexport const setImagePlacerRef = (\r\n  ref: React.RefObject<HTMLDivElement>\r\n): ISetImagePlacerRefAction => ({\r\n  type: ECarouselActionType.Set_ImagePlacerRef,\r\n  ref,\r\n});\r\n\r\nexport const setImgWidth = (imgWidth: number): ISetImageWidthAction => ({\r\n  type: ECarouselActionType.Set_ImageWidth,\r\n  imgWidth,\r\n});\r\n","import React, { useCallback, Dispatch } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { setImageIndicatorCurIdx } from \"../../../../store/action/carousel\";\r\nimport { TCombinedStates } from \"../../../../store\";\r\nimport \"./_ImageMoveTo.scss\";\r\n\r\nconst ImageMoveTo: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onMoveToLeft = useMoveCarousel(\"left\", dispatch);\r\n  const onMoveToRight = useMoveCarousel(\"right\", dispatch);\r\n\r\n  return (\r\n    <div className=\"imageMoveTo\">\r\n      <div onClick={onMoveToLeft}>&larr;</div>\r\n      <div onClick={onMoveToRight}>&rarr;</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useMoveCarousel = (\r\n  direction: \"left\" | \"right\",\r\n  dispatch: Dispatch<any>\r\n) => {\r\n  const placerEl = useSelector((state: TCombinedStates) => state.carousel.ref);\r\n\r\n  const imgLen = useSelector(\r\n    (state: TCombinedStates) => state.carouselAsync.urls?.length,\r\n    shallowEqual\r\n  );\r\n\r\n  const curIdx = useSelector(\r\n    (state: TCombinedStates) => state.carousel.idx,\r\n    shallowEqual\r\n  );\r\n\r\n  const _setImageIndicatorCurIdx = useCallback(\r\n    (idx: number) => dispatch(setImageIndicatorCurIdx(idx)),\r\n    []\r\n  );\r\n\r\n  const imgWidth = useSelector(\r\n    (state: TCombinedStates) => state.carousel.imgWidth,\r\n    shallowEqual\r\n  );\r\n\r\n  return useCallback(\r\n    (_: React.SyntheticEvent<HTMLDivElement>) => {\r\n      if (\r\n        !placerEl?.current ||\r\n        imgLen === undefined ||\r\n        imgWidth === undefined\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (direction === \"left\") {\r\n        if (curIdx === 0) {\r\n          _setImageIndicatorCurIdx(imgLen - 1);\r\n          placerEl.current!.style.transform = `translate(${\r\n            -imgWidth * (imgLen - 1)\r\n          }px, 0px)`;\r\n        } else {\r\n          _setImageIndicatorCurIdx(curIdx - 1);\r\n          placerEl.current!.style.transform = `translate(${\r\n            -imgWidth * (curIdx - 1)\r\n          }px, 0px)`;\r\n        }\r\n      }\r\n\r\n      if (direction === \"right\") {\r\n        if (curIdx === imgLen - 1) {\r\n          _setImageIndicatorCurIdx(0); // curIdx is 0\r\n          placerEl.current!.style.transform = `translate(0px, 0px)`;\r\n        } else {\r\n          _setImageIndicatorCurIdx(curIdx + 1);\r\n          placerEl.current!.style.transform = `translate(${\r\n            -imgWidth * (curIdx + 1)\r\n          }px, 0px)`;\r\n        }\r\n      }\r\n    },\r\n    [imgLen, curIdx, _setImageIndicatorCurIdx, imgWidth]\r\n  );\r\n};\r\n\r\nexport default ImageMoveTo;\r\n","import React, { useMemo } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { TCombinedStates } from \"~/src/store\";\r\n\r\nimport \"./_ImagesIndicator.scss\";\r\n\r\nconst ImagesIndicator: React.FC = () => {\r\n  const imgLen = useSelector(\r\n    (state: TCombinedStates) => state.carouselAsync.urls?.length,\r\n    shallowEqual\r\n  );\r\n\r\n  const curIdx = useSelector(\r\n    (state: TCombinedStates) => state.carousel.idx,\r\n    shallowEqual\r\n  );\r\n\r\n  const indicatorJSX: Array<JSX.Element> = useMemo(\r\n    () =>\r\n      new Array(imgLen)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n          <div key={uuidv4()} className={curIdx === i ? \"highlight\" : \"\"}></div>\r\n        )),\r\n    [imgLen, curIdx]\r\n  );\r\n\r\n  return <div className=\"imagesIndicator\">{indicatorJSX}</div>;\r\n};\r\n\r\nexport default ImagesIndicator;\r\n","import React, {\r\n  useMemo,\r\n  useCallback,\r\n  Dispatch,\r\n  useRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { setImgWidth, setImagePlacerRef } from \"../../../store/action/carousel\";\r\nimport { TCombinedStates } from \"../../../store\";\r\n\r\n// import ImageMoveTo from \"../Image-carousel-elements/ImageMoveTo\";\r\nimport ImageMoveTo from \"./Image-carousel-elements/ImageMoveTo\";\r\nimport ImagesIndicator from \"./Image-carousel-elements/ImagesIndicator\";\r\n\r\nimport \"./_ImageCarousel.scss\";\r\n\r\nconst ImageCarousel: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const setImgRef = useImgRef(dispatch);\r\n  const imgJSX = useImg(dispatch);\r\n\r\n  return (\r\n    <div className=\"imageCarousel\">\r\n      <div className=\"imageCarousel-imagePlacer\" ref={setImgRef}>\r\n        {imgJSX}\r\n      </div>\r\n      <div className=\"imageCarousel-indicator\">\r\n        <ImageMoveTo />\r\n        <ImagesIndicator />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useImg = (dispatch: Dispatch<any>) => {\r\n  const imgs = useSelector(\r\n    (state: TCombinedStates) => state.carouselAsync.urls\r\n  );\r\n\r\n  const _setImgWidth = useCallback(\r\n    (imgWidth: number) => dispatch(setImgWidth(imgWidth)),\r\n    [dispatch]\r\n  );\r\n\r\n  const imgTmpRef = useRef<HTMLImageElement>(null);\r\n\r\n  const curIdx = useSelector(\r\n    (state: TCombinedStates) => state.carousel.idx,\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!imgTmpRef) return;\r\n\r\n    const timerHandle = setTimeout(() => {\r\n      _setImgWidth(imgTmpRef.current?.clientWidth!);\r\n    }, 200);\r\n\r\n    return () => clearTimeout(timerHandle);\r\n  }, [imgTmpRef]);\r\n\r\n  return useMemo(\r\n    () =>\r\n      imgs?.map((url: string, i: number) => {\r\n        // to calc the width of image\r\n        if (i === 0) {\r\n          return (\r\n            <img\r\n              key={uuidv4()}\r\n              src={url}\r\n              className={[\r\n                \"imageCarousel--image\",\r\n                `${curIdx !== i ? \"hidden\" : \"\"}`,\r\n              ].join(\" \")}\r\n              ref={imgTmpRef}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <img\r\n              key={uuidv4()}\r\n              src={url}\r\n              className={[\r\n                \"imageCarousel--image\",\r\n                `${curIdx !== i ? \"hidden\" : \"\"}`,\r\n              ].join(\" \")}\r\n            />\r\n          );\r\n        }\r\n      }),\r\n    [imgs, curIdx]\r\n  );\r\n};\r\n\r\nconst useImgRef = (dispatch: Dispatch<any>) => {\r\n  const imgRef = useSelector((state: TCombinedStates) => state.carousel.ref);\r\n\r\n  const _setImgRef = useCallback(\r\n    (ref: React.RefObject<HTMLDivElement>) => dispatch(setImagePlacerRef(ref)),\r\n    [dispatch]\r\n  );\r\n\r\n  return useCallback((ref: HTMLDivElement) => {\r\n    if (ref && !imgRef?.current) {\r\n      _setImgRef({ current: ref });\r\n    }\r\n  }, []);\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import { ILectureData, TStatusCode } from \"~/src/typings\";\r\nimport { axiosInstance_Server } from \"./Axios\";\r\n\r\nexport const get_AllLectures = async (): Promise<{\r\n  data: Array<ILectureData>;\r\n  status: TStatusCode;\r\n}> => {\r\n  const { data, status } = await axiosInstance_Server.get(\"/lectures\");\r\n  return { data, status };\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport { ESearchAsyncActionType, ILectureData } from \"~/src/typings\";\r\nimport {\r\n  IFetchRequestAction_RetrieveLectures,\r\n  IFetchSucceedAction_RetrieveLectures,\r\n  IFetchFailAction_RetrieveLectures,\r\n} from \"./Actions\";\r\nimport { get_AllLectures } from \"~/src/service/LectureService\";\r\n\r\nexport const fetchRequest_RetrieveLectures = (): IFetchRequestAction_RetrieveLectures => ({\r\n  type: ESearchAsyncActionType.FetchRequest_RetrieveLectures,\r\n});\r\n\r\nexport const fetchSucceed_RetrieveLectures = (\r\n  status: number,\r\n  lectures: Array<ILectureData>\r\n): IFetchSucceedAction_RetrieveLectures => ({\r\n  type: ESearchAsyncActionType.FetchSucceed_RetrieveLectures,\r\n  status,\r\n  lectures,\r\n});\r\n\r\nexport const fetchFail_RetrieveLectures = (\r\n  errCode: string,\r\n  err: string\r\n): IFetchFailAction_RetrieveLectures => ({\r\n  type: ESearchAsyncActionType.FetchFail_RetrieveLectures,\r\n  errCode,\r\n  err,\r\n});\r\n\r\nexport const initFetch_RetrieveLectures = () => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  try {\r\n    dispatch(fetchRequest_RetrieveLectures());\r\n    const { data, status } = await get_AllLectures();\r\n\r\n    // hasUppercase?\r\n    // data.forEach((d: ILectureFetchResult, i: number) => {\r\n    //   if (d.skills.match(/[A-Z]/) !== null) {\r\n    //     console.log(`${i}: ${d.skills} has uppercase!`);\r\n    //   }\r\n    // });\r\n\r\n    // console.log(data);\r\n\r\n    dispatch(fetchSucceed_RetrieveLectures(status, data));\r\n  } catch (err) {\r\n    dispatch(fetchFail_RetrieveLectures(status, err));\r\n  }\r\n};\r\n","import { ESearchBarActionType } from \"../../../typings\";\r\nimport {\r\n  IToggleSearchBar,\r\n  IOpenSearchBar,\r\n  ICloseSearchBar,\r\n  ISetCurrentInput,\r\n  IToggleInvalidKeywordWarningRef,\r\n} from \"./Actions\";\r\n\r\nexport const toggleSearchBar = (): IToggleSearchBar => ({\r\n  type: ESearchBarActionType.Toggle_SearchBar,\r\n});\r\n\r\nexport const openSearchBar = (): IOpenSearchBar => ({\r\n  type: ESearchBarActionType.Open_SearchBar,\r\n});\r\n\r\nexport const closeSearchBar = (): ICloseSearchBar => ({\r\n  type: ESearchBarActionType.Close_SearchBar,\r\n});\r\n\r\nexport const setCurrentInput = (input: string): ISetCurrentInput => ({\r\n  type: ESearchBarActionType.Set_CurrentInput,\r\n  input,\r\n});\r\n\r\nexport const ToggleInvalidKeywordWarningRef = (): IToggleInvalidKeywordWarningRef => ({\r\n  type: ESearchBarActionType.Toggle_InvalidKeyword_WarningRef,\r\n});\r\n","import { ESearchActionType } from \"../../../typings\";\r\nimport {\r\n  ISetSelectedKeyword,\r\n  ISetSelectedPlatform,\r\n  IClearSelectedAll,\r\n} from \"./Actions\";\r\n\r\nexport const setSelectedKeyword = (\r\n  selectedKeyword: string\r\n): ISetSelectedKeyword => ({\r\n  type: ESearchActionType.Set_SelectedKeyword,\r\n  selectedKeyword,\r\n});\r\n\r\nexport const setSelectedPlatform = (\r\n  selectedPlatform: string\r\n): ISetSelectedPlatform => ({\r\n  type: ESearchActionType.Set_SelectedPlatform,\r\n  selectedPlatform,\r\n});\r\n\r\nexport const clearSelectedAll = (): IClearSelectedAll => ({\r\n  type: ESearchActionType.Clear_SelectedAll,\r\n});\r\n\r\n","import { ESearchSuggestionActionType } from \"../../../typings\";\r\nimport { ISetSuggestion, IClearSuggestion } from \"./Actions\";\r\n\r\nexport const setSuggestion = (suggestions: Array<string>): ISetSuggestion => ({\r\n  type: ESearchSuggestionActionType.Set_Suggestion,\r\n  suggestions,\r\n});\r\n\r\nexport const clearSuggestion = (): IClearSuggestion => ({\r\n  type: ESearchSuggestionActionType.Clear_Suggestion,\r\n});\r\n","import React, { useCallback } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { TCombinedStates } from \"../../../../../store\";\r\n\r\nimport { EButtonSize, EButtonType } from \"../../../../../typings\";\r\nimport Button from \"../../../../../component/button/Button\";\r\n\r\nimport { setSelectedKeyword } from \"../../../../../store/action/search\";\r\nimport {\r\n  setCurrentInput,\r\n  ToggleInvalidKeywordWarningRef,\r\n} from \"../../../../../store/action/search-bar\";\r\nimport { clearSuggestion } from \"../../../../../store/action/search-suggestion\";\r\n\r\nimport \"./_SearchBarButton.scss\";\r\n\r\nconst AddButton: React.FC = () => {\r\n  const input = useSelector(\r\n    (state: TCombinedStates) => state.searchBar.input,\r\n    shallowEqual\r\n  );\r\n\r\n  const suggestions = useSelector(\r\n    (state: TCombinedStates) => state.searchSuggestion.suggestions\r\n  );\r\n\r\n  // 1. Add input to Selected Keyword\r\n  const dispatch = useDispatch();\r\n  const _setSelectedKeyword = useCallback(\r\n    (keyword: string) => dispatch(setSelectedKeyword(keyword)),\r\n    [dispatch]\r\n  );\r\n\r\n  const clearCurrentInput = useCallback(\r\n    (input: string) => dispatch(setCurrentInput(input)),\r\n    [dispatch]\r\n  );\r\n\r\n  const _clearSuggestion = useCallback(() => dispatch(clearSuggestion()), [\r\n    dispatch,\r\n  ]);\r\n\r\n  const _toggleInvalidKeywordWarning = useCallback(\r\n    () => dispatch(ToggleInvalidKeywordWarningRef()),\r\n    [dispatch]\r\n  );\r\n\r\n  const onClickAddButton = useCallback(\r\n    (_: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!suggestions.includes(input)) {\r\n        _toggleInvalidKeywordWarning();\r\n        setTimeout(() => _toggleInvalidKeywordWarning(), 3000);\r\n      } else {\r\n        // add input to selected keywords\r\n        _setSelectedKeyword(input);\r\n      }\r\n\r\n      // wipe out the current input & suggestion\r\n      clearCurrentInput(\"\");\r\n      _clearSuggestion();\r\n    },\r\n    [\r\n      input,\r\n      suggestions,\r\n      _setSelectedKeyword,\r\n      clearCurrentInput,\r\n      _clearSuggestion,\r\n      _toggleInvalidKeywordWarning,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Button\r\n      btnSize={EButtonSize.Small}\r\n      btnType={EButtonType.Primary}\r\n      additionalClassName=\"searchBar--btn-add\"\r\n      onClick={onClickAddButton}\r\n    >\r\n      추가\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport {\r\n  ESearchResultActionType,\r\n  ILectureData,\r\n} from \"../../../typings\";\r\nimport {\r\n  IStartSearch,\r\n  ISucceedSearch,\r\n  IFailSearch,\r\n  IToggleResultView,\r\n} from \"./Actions\";\r\n\r\nexport const startSearch = (): IStartSearch => ({\r\n  type: ESearchResultActionType.Start_Search,\r\n});\r\n\r\nexport const succeedSearch = (\r\n  lectures: ILectureData[]\r\n): ISucceedSearch => ({\r\n  type: ESearchResultActionType.Succeed_Search,\r\n  lectures,\r\n});\r\n\r\nexport const failSearch = (): IFailSearch => ({\r\n  type: ESearchResultActionType.Fail_Search,\r\n});\r\n\r\nexport const toggleResultView = (): IToggleResultView => ({\r\n  type: ESearchResultActionType.Toggle_ResultView,\r\n});\r\n\r\nexport const initSearch = (\r\n  targetPlatforms: string[],\r\n  targetKeywords: string[],\r\n  lectures: ILectureData[]\r\n) => (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n  // start searching\r\n  dispatch(startSearch());\r\n\r\n  // query the fetched lecture by target platforms\r\n  // e.g. [\"youtube\", \"inflearn\"] or [\"유튜브\", \"인프런\"]\r\n  const lecturesQueriedByTargetPlatforms = lectures.filter(\r\n    (lecture: ILectureData) => targetPlatforms.includes(lecture.platform)\r\n  );\r\n  console.log(lecturesQueriedByTargetPlatforms);\r\n\r\n  // query the previous queried lectures by target keywords\r\n  // e.g. [\"react\", \"클론코딩\", \"c++\"]\r\n  // + 모든 lecture.skills 는 소문자\r\n  // + lecture.skills 의 기본 구분자는 ','\r\n  // + lecture.skills 의 각 skill 들은 '-', '/' 로 나뉠 수 있다.\r\n  const lecturesQueriedByTargetKeywords = lecturesQueriedByTargetPlatforms.filter(\r\n    (lecture: ILectureData) => {\r\n      const matchedWithTargetKeywords = lecture.skills\r\n        .split(/,/)\r\n        .filter((skill: string) => targetKeywords.includes(skill));\r\n      return matchedWithTargetKeywords.length > 0;\r\n    }\r\n  );\r\n  console.log(lecturesQueriedByTargetKeywords);\r\n\r\n  const isSearchSucceed = lecturesQueriedByTargetKeywords.length > 0;\r\n\r\n  if (isSearchSucceed) {\r\n    dispatch(succeedSearch(lecturesQueriedByTargetKeywords));\r\n  } else {\r\n    dispatch(failSearch());\r\n  }\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { TCombinedStates } from \"../../../../../store\";\r\n\r\nimport {\r\n  EButtonSize,\r\n  EButtonType,\r\n  ILectureData,\r\n} from \"../../../../../typings\";\r\nimport Button from \"../../../../../component/button/Button\";\r\n\r\nimport { initSearch } from \"../../../../../store/action/search-result\";\r\n\r\nimport \"./_SearchBarButton.scss\";\r\n\r\nconst SearchButton: React.FC = () => {\r\n  const onClickSearchBtn = useOnClickSearchBtn();\r\n\r\n  return (\r\n    <Button\r\n      btnSize={EButtonSize.XSmall}\r\n      btnType={EButtonType.Primary}\r\n      additionalClassName=\"searchBar--btn-search\"\r\n      additionalStyles={{ fontSize: \"0.9rem\" }}\r\n      onClick={onClickSearchBtn}\r\n    >\r\n      검색\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useOnClickSearchBtn = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedKeywords: string[] = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedKeywords\r\n  );\r\n\r\n  const selectedPlatforms: string[] = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedPlatforms\r\n  );\r\n\r\n  const lectures: ILectureData[] = useSelector(\r\n    (state: TCombinedStates) => state.searchAsync.lectures\r\n  );\r\n\r\n  // start search\r\n  const _initSearch = useCallback(() => {\r\n    // console.log(\"selected keywords \", selectedKeywords);\r\n    // console.log(\"selected platforms \", selectedPlatforms);\r\n\r\n    dispatch(initSearch(selectedPlatforms, selectedKeywords, lectures));\r\n  }, [selectedPlatforms, selectedKeywords, lectures]);\r\n\r\n  return useCallback((_: React.MouseEvent<HTMLDivElement>) => _initSearch(), [\r\n    _initSearch,\r\n  ]);\r\n};\r\n\r\nexport default SearchButton;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EButtonSize, EButtonType } from \"../../../../../typings\";\r\nimport Button from \"../../../../../component/button/Button\";\r\nimport { clearSelectedAll } from \"../../../../../store/action/search/ActionCreators\";\r\n\r\nimport \"./_SearchBarButton.scss\";\r\n\r\nconst ClearButton: React.FC = () => {\r\n  // clear selected keywords all\r\n  const dispatch = useDispatch();\r\n  const _clearAll = useCallback(() => dispatch(clearSelectedAll()), []);\r\n  const onClickClearButton = useCallback(\r\n    (_: React.MouseEvent<HTMLDivElement>) => _clearAll(),\r\n    [_clearAll]\r\n  );\r\n\r\n  return (\r\n    <Button\r\n      btnSize={EButtonSize.Small}\r\n      btnType={EButtonType.Primary}\r\n      additionalClassName=\"searchBar--clearBtn\"\r\n      onClick={onClickClearButton}\r\n    >\r\n      비우기\r\n    </Button>\r\n  );\r\n};\r\nexport default ClearButton;\r\n","export const platformsKorean = new Set<string>([\"유튜브\", \"인프런\"]);\r\n\r\nexport const platformsKoreanAsArr = Array.from<string>(platformsKorean);\r\n\r\nexport const platformsEnglish = new Set<string>([\"Youtube\", \"Inflearn\"]);\r\n\r\nexport const platformsEnglishAsArr = Array.from<string>(platformsEnglish);\r\n\r\nexport const keywordsKorean = new Set<string>([\r\n  \"클론코딩\",\r\n  \"취업\",\r\n  \"면접\",\r\n  \"포트폴리오\",\r\n  \"백엔드\",\r\n  \"프론트엔드\",\r\n  \"객체지향\",\r\n  \"웹앱\",\r\n  \"닷넷\",\r\n  \"인터렉티브웹\",\r\n  \"빅데이터\",\r\n  \"인공지능\",\r\n  \"머신러닝\",\r\n  \"게임기획\",\r\n  \"게임개발\",\r\n  \"다이렉트x\",\r\n  \"동시성\",\r\n  \"멀티쓰레드\",\r\n  \"웹 게임\",\r\n  \"코딩테스트\",\r\n  \"리액트\",\r\n  \"리액트 네이티브\",\r\n  \"리덕스\",\r\n  \"리액트 라우터\",\r\n  \"웹팩\",\r\n  \"함수형 프로그래밍\",\r\n  \"딥러닝\",\r\n  \"웹퍼블리싱\",\r\n  \"디자인\",\r\n  \"반응형\",\r\n  \"제이쿼리\",\r\n  \"스프링\",\r\n  \"스프링부트\",\r\n  \"깃\",\r\n  \"깃허브\",\r\n  \"모바일앱\",\r\n  \"모바일\",\r\n  \"업무자동화\",\r\n  \"자동화\",\r\n  \"디스코드\",\r\n  \"마인크래프트\",\r\n  \"플러터\",\r\n  \"워드프레스\",\r\n  \"버전관리\",\r\n  \"강화학습\",\r\n  \"게임수학\",\r\n  \"도커\",\r\n  \"데브옵스\",\r\n  \"쿠버네티스\",\r\n  \"플라스크\",\r\n  \"장고\",\r\n  \"로켓\",\r\n  \"캐글\",\r\n  \"주피터\",\r\n  \"리팩토링\",\r\n  \"네트워크\",\r\n  \"클라우드\",\r\n  \"크롤링\",\r\n  \"영상처리\",\r\n  \"증강현실\",\r\n  \"가상현실\",\r\n  \"데이터 처리\",\r\n  \"텍스트 마이닝\",\r\n  \"데이터 시각화\",\r\n  \"리눅스\",\r\n  \"해킹\",\r\n]);\r\n\r\nexport const keywordsKoreanAsArr = Array.from<string>(keywordsKorean);\r\n\r\nexport const keywordsEnglish = new Set<string>([\r\n  \"c\",\r\n  \"c++\",\r\n  \"c#\",\r\n  \"java\",\r\n  \"javascript\",\r\n  \"go\",\r\n  \"rust\",\r\n  \"typescript\",\r\n  \"php\",\r\n  \"ruby\",\r\n  \"python\",\r\n  \"objective-c\",\r\n  \"swift\",\r\n  \"kotlin\",\r\n  \"react\",\r\n  \"express\",\r\n  \"spring\",\r\n  \"back-end\",\r\n  \"front-end\",\r\n  \"html/css\",\r\n  \"redux\",\r\n  \"mobx\",\r\n  \"unity3d\",\r\n  \"unity\",\r\n  \"unreal engine4\",\r\n  \"unreal\",\r\n  \"oop\",\r\n  \"node.js\",\r\n  \"pwa\",\r\n  \"xamarin\",\r\n  \"asp.net\",\r\n  \"asp.mvc\",\r\n  \".net\",\r\n  \".net core\",\r\n  \"blazor\",\r\n  \"tdd\",\r\n  \"test\",\r\n  \"testing\",\r\n  \"webgl\",\r\n  \"3d\",\r\n  \"three.js\",\r\n  \"numpy\",\r\n  \"flex\",\r\n  \"svelte\",\r\n  \"angular\",\r\n  \"vue\",\r\n  \"big data\",\r\n  \"ai\",\r\n  \"machine learning\",\r\n  \"game design\",\r\n  \"game development\",\r\n  \"directx\",\r\n  \"vulkan\",\r\n  \"metal\",\r\n  \"io game\",\r\n  \"web game\",\r\n  \"concurrency\",\r\n  \"multithread\",\r\n  \"pandas\",\r\n  \"jsp\",\r\n  \"jpa\",\r\n  \"rxjava\",\r\n  \"rxjs\",\r\n  \"axios\",\r\n  \"react router\",\r\n  \"vuex\",\r\n  \"mvc\",\r\n  \"coding test\",\r\n  \"react native\",\r\n  \"firebase\",\r\n  \"aws\",\r\n  \"webpack\",\r\n  \"azure\",\r\n  \"functional programming\",\r\n  \"restAPI\",\r\n  \"restful\",\r\n  \"restapi\",\r\n  \"html\",\r\n  \"css\",\r\n  \"less\",\r\n  \"markup\",\r\n  \"scss\",\r\n  \"sass\",\r\n  \"flex\",\r\n  \"grid\",\r\n  \"mongodb\",\r\n  \"mariadb\",\r\n  \"mysql\",\r\n  \"mssql\",\r\n  \"deep learning\",\r\n  \"design\",\r\n  \"responsive\",\r\n  \"qt\",\r\n  \"gui\",\r\n  \"jQuery\",\r\n  \"springboot\",\r\n  \"git\",\r\n  \"github\",\r\n  \"es6\",\r\n  \"swiftUI\",\r\n  \"ios\",\r\n  \"automation\",\r\n  \"discord\",\r\n  \"minecraft\",\r\n  \"flutter\",\r\n  \"wordpress\",\r\n  \"vcs\",\r\n  \"reinforcement learning\",\r\n  \"game mathematics\",\r\n  \"docker\",\r\n  \"devops\",\r\n  \"kubernetes\",\r\n  \"flask\",\r\n  \"django\",\r\n  \"rocket\",\r\n  \"kaggle\",\r\n  \"jupyter\",\r\n  \"refactoring\",\r\n  \"netword\",\r\n  \"tcpip\",\r\n  \"tcp/ip\",\r\n  \"sql\",\r\n  \"nosql\",\r\n  \"cloud\",\r\n  \"crawling\",\r\n  \"opencv\",\r\n  \"ar\",\r\n  \"vr\",\r\n  \"rdbms\",\r\n  \"reactive streams\",\r\n  \"r\",\r\n  \"junit\",\r\n  \"mockito\",\r\n  \"jasmine\",\r\n  \"jest\",\r\n  \"react test\",\r\n  \"kafka\",\r\n  \"graphql\",\r\n  \"data processing\",\r\n  \"text mining\",\r\n  \"linux\",\r\n  \"hacking\",\r\n  \"Tensorflow\",\r\n]);\r\n\r\nexport const keywordsEnglishAsArr = Array.from<string>(keywordsEnglish);\r\n\r\n// type TSearchKeyword = {\r\n//   [langName: string]: {\r\n//     mainField: Array<string>;\r\n//     keywords: Array<string>;\r\n//   };\r\n//   // [langName: string]: string;\r\n// };\r\n//\r\n// export const SearchKeywordData: TSearchKeyword = {\r\n//   c: {\r\n//     keywords: [\"opengl\", \"directX\"],\r\n//   },\r\n//   cpp: {\r\n//     mainField: \"system\",\r\n//     keywords: [\"opengl\", \"directX\", \"vulkan\", \"qt\"],\r\n//   },\r\n//   csharp: {\r\n//     mainField: \"system\",\r\n//     keywords: [\".net\", \"dotnet\", \"asp\", \"asp.net\", \"asp.mvc\", \"blazor\"],\r\n//   },\r\n//   java: {\r\n//     mainField: \"system\",\r\n//     keywords: [\"spring\"],\r\n//   },\r\n//   javascript: {\r\n//     mainField: \"system\",\r\n//     keywords: [\"\"],\r\n//   },\r\n// };\r\n\r\n// // SearchKeywordData.c?.keywords;\r\n\r\n// 텍스트마이닝,데이터시각화,웹크롤링\r\n// AWS,Linux\r\n// Docker,MySQL\r\n// 취업,면접,포트폴리오\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// Front-End,웹개발,Svelte\r\n// 인터랙티브웹,클론코딩\r\n// Linux,ShellScript\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// 함수형프로그래밍,RxJava,ReactiveStreams\r\n// HTML/CSS,jQuery,웹디자인\r\n// Android,Kotlin,모바일앱개발\r\n// C#,Unity,게임개발\r\n// R,웹크롤링\r\n// Unity,게임개발\r\n// JavaScript,ES6\r\n// SQL,데이터분석\r\n// Back-End,RESTAPI,ASP.NETCore\r\n// Android,Kotlin,모바일앱개발\r\n// C#,객체지향\r\n// iOS,모의해킹,정보보안\r\n// Vim\r\n// Android,Kotlin,모바일앱개발\r\n// XD,UX/UI,모바일디자인\r\n// Docker,DevOps,시스템자동화\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// Back-End,PHP,웹개발\r\n// Front-End,React\r\n// Redux\r\n// Github,Git,버전관리시스템\r\n// HTML/CSS,JavaScript,Python\r\n// 모의해킹,정보보안\r\n// R,데이터분석,웹크롤링\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// Redux,MobX,Front-End\r\n// Python,웹개발,서비스개발\r\n// C#\r\n// 사무실무,Java\r\n// JavaScript,객체지향\r\n// Wordpress,PHP\r\n// Java,객체지향\r\n// Android,Kotlin,모바일앱개발\r\n// Java,객체지향\r\n// React,웹개발,게임개발\r\n// Java,Spring,MVC\r\n// iOS,Swift,모바일앱개발\r\n// JavaScript,Node.js,웹크롤링\r\n// Python,Django,Bootstrap\r\n// Github,Jetbrains,Anaconda\r\n// Vue.js,웹앱,PWA\r\n// C++\r\n// Java,Spring\r\n// Jetbrains\r\n// Python,데이터과학,NLP\r\n// Unity,게임개발,디자인패턴\r\n// Python\r\n// Python\r\n// Tensorflow,Keras,딥러닝\r\n// 정규식\r\n// 정보처리기사\r\n// HTML/CSS,JavaScript,Bootstrap\r\n// JavaScript\r\n// 취업,면접,포트폴리오\r\n// Linux,ShellScript\r\n// SpringBoot,JWT\r\n// Java\r\n// Unity,C#,게임개발\r\n// Kaggle,데이터분석,Pandas\r\n// C++\r\n// Python,웹크롤링\r\n// Front-End,HTML/CSS,JavaScript\r\n// 코딩테스트,Java,알고리즘\r\n// Unity,C#,게임개발\r\n// Linux,ShellScript\r\n// HTML/CSS,jQuery,웹퍼블리싱\r\n// Python\r\n// ASP.NETCore,MVC\r\n// 디자인패턴,Java\r\n// .NET\r\n// React,Redux,Node.js\r\n// 게임개발,EFCore,ORM\r\n// Python\r\n// Java,알고리즘\r\n// SQL,데이터분석\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// HTML/CSS,웹개발\r\n// Unity,Git,게임개발\r\n// Powershell,시스템자동화\r\n// Python,알고리즘\r\n// 데이터분석,시빅해킹\r\n// Tensorflow,JavaScript,머신러닝\r\n// 웹앱,OAuth\r\n// Python,웹크롤링,Selenium\r\n// Python\r\n// JavaScript\r\n// 자료구조,C#,게임개발\r\n// C#,Unity,알고리즘\r\n// JavaScript,ES6\r\n// 게임개발,CocosCreator\r\n// Flutter,iOS,Android\r\n// 인공지능,데이터분석,데이터과학\r\n// 웹기획,Django,Bootstrap\r\n// UnrealEngine,게임개발\r\n// Python,알고리즘,코딩테스트\r\n// HTML/CSS,Python,Django\r\n// Android,Kotlin,Firebase\r\n// 자료구조,알고리즘\r\n// 웹앱,블록체인\r\n// 수학,알고리즘\r\n// Vue.js,Webpack,Vuex\r\n// Android,Kotlin,모바일앱개발\r\n// Vue.js,웹개발\r\n// Python\r\n// R,데이터분석,웹크롤링\r\n// SpringBoot\r\n// HTML/CSS,JavaScript,Python\r\n// C,알고리즘\r\n// 선형대수학,행렬,수학\r\n// Python,Django\r\n// Git,버전관리시스템\r\n// HTML/CSS,웹퍼블리싱\r\n// Java,Spring,Back-End\r\n// Front-End,JavaScript,ES6\r\n// Back-End,Node.js,MySQL\r\n// HTML/CSS,웹디자인,웹퍼블리싱\r\n// Back-End,Node.js\r\n// C#,Unity,게임개발\r\n// JavaScript\r\n// HTML/CSS,웹퍼블리싱\r\n// JavaScript,함수형프로그래밍\r\n// Unity,게임개발\r\n// TDD,Back-End,Node.js\r\n// JavaScript,Node.js\r\n// 게임개발,Scratch\r\n// Git\r\n// HTML/CSS\r\n// HTML/CSS,PHP\r\n// 정보처리기사\r\n// 정보처리기사\r\n// Python\r\n// Docker,네트워크,Linux\r\n// Numpy,알고리즘,Python\r\n// 정보처리기사\r\n// 정보처리기사\r\n// 클론코딩,React,TypeScript\r\n// 게임개발,UnrealEngine\r\n// HTML/CSS,웹개발\r\n// 정보처리기사\r\n// Quasar,웹개발,Vue.js\r\n// 운영체제,동시성\r\n// C#,알고리즘\r\n// GraphQL,Apollo,Node.js\r\n// Swift,iOS\r\n// PWA,구글앱엔진,Flask\r\n// Java\r\n// Android,모의해킹,악성코드\r\n// 웹퍼블리싱,HTML/CSS,반응형웹\r\n// Pandas,데이터분석,Anaconda\r\n// SQL,데이터베이스\r\n// Vue.js,Django,Full-Stack\r\n// 디지털마케팅,Python,웹앱\r\n// 알고리즘\r\n// JavaScript,함수형프로그래밍,RxJS\r\n// Python,알고리즘\r\n// SQL,데이터베이스,MSSQL\r\n// SQL,데이터베이스,MSSQL\r\n// Arduino\r\n// Python,데이터분석,Kaggle\r\n// PHP,객체지향,알고리즘\r\n// SQL\r\n// Java,JSP,웹개발\r\n// 블록체인,Ethereum\r\n// Azure,가상화,클라우드\r\n// 머신러닝,인공지능\r\n// Flutter,모바일앱개발,클론코딩\r\n// R,데이터분석,웹크롤링\r\n// Jetbrains,웹개발,IntelliJIDEA\r\n// 딥러닝,인공지능,인공신경망\r\n// Bootstrap,웹개발,반응형웹\r\n// Tensorflow,Android,머신러닝\r\n// Front-End,JavaScript,Vue.js\r\n// Python,업무자동화,Selenium\r\n// Java,웹앱,JavaFX\r\n// Python,웹크롤링\r\n// R,데이터분석,데이터과학\r\n// R,데이터분석,데이터시각화\r\n// Unity,3D모델링,VR/AR\r\n// React,Redux,Node.js\r\n// SQL,모의해킹,MySQL\r\n// Azure,클라우드\r\n// Python,웹크롤링\r\n// 네트워크\r\n// iOS,게임개발,모바일앱개발\r\n// ADO.NET\r\n// Tensorflow,Python,딥러닝\r\n// JavaScript\r\n// Android,정보보안\r\n// DApp,블록체인,Ethereum\r\n// Tensorflow,수학\r\n// Python,SQL,MySQL\r\n// Python,MongoDB,데이터베이스\r\n// Android,Kotlin\r\n// 웹기획,HTML/CSS,웹퍼블리싱\r\n// 모의해킹,정보보안\r\n// Java,MVC\r\n// Vue.js,Node.js,AWS\r\n// Flutter,iOS,Android\r\n// Python\r\n// Front-End,Back-End,Angular\r\n// Back-End,Linux\r\n// Java,블록체인\r\n// React,Ethereum\r\n// iOS,Swift,함수형프로그래밍\r\n// JavaScript,게임개발\r\n// Android,모바일앱개발\r\n// MySQL,데이터베이스\r\n// JavaScript\r\n// Express\r\n// Front-End,JavaScript,React\r\n// MySQL,PHP\r\n// HTML/CSS,웹퍼블리싱\r\n// Python,업무자동화\r\n// MySQL,데이터베이스\r\n// C\r\n// JavaScript\r\n// HTML/CSS\r\n// 악성코드\r\n// 머신러닝,인공지능,데이터분석\r\n// Java\r\n// HTML/CSS\r\n// 정규식\r\n// MySQL\r\n// jQuery\r\n// 게임수학,게임개발\r\n// 정보처리기사\r\n// Kotlin,SpringBoot,Thymeleaf\r\n// JavaScript\r\n// Swift,iOS\r\n// VR/AR,Unity\r\n// R,통계\r\n// 알고리즘\r\n// Android,Kotlin,모바일앱개발\r\n// HTML/CSS,JavaScript,웹개발\r\n// Kubernetes\r\n// Python,Pandas,데이터분석\r\n// Python,Pandas,데이터분석\r\n// SQL,데이터베이스,MSSQL\r\n// Swift\r\n// Wordpress,WooCommerce,웹개발\r\n// JSP,웹개발,MVC\r\n// Python,MySQL,Pandas\r\n// Swift,모바일앱개발\r\n// Docker,DevOps,시스템자동화\r\n// Java,SpringBoot,SpringSecurity\r\n// HTML/CSS,JavaScript,웹퍼블리싱\r\n// 모의해킹,웹개발\r\n// Python,Arduino,웹개발\r\n// Tensorflow,머신러닝,딥러닝\r\n// Android,Kotlin,모바일앱개발\r\n// DApp,Ethereum,Truffle\r\n// Java,객체지향\r\n// Java,Spring\r\n// Tensorflow,머신러닝,딥러닝\r\n// 아키텍처\r\n// HTML/CSS,JavaScript,Python\r\n// Tensorflow,머신러닝,데이터분석\r\n// Python,Pandas,데이터분석\r\n// 블록체인,Ethereum,Docker\r\n// R,데이터분석,데이터시각화\r\n// Back-End,데이터베이스\r\n// Python\r\n// DApp,블록체인\r\n// Front-End,Vue.js\r\n// 웹크롤링,Scrapy,Selenium\r\n// Node.js,Express\r\n// Back-End,Express\r\n// DApp,블록체인,Truffle\r\n// Front-End,Vue.js\r\n// 정보보안,시스템해킹\r\n// iOS,Swift\r\n// JavaScript,React,ReactNative\r\n// React\r\n// iOS,Swift,모바일앱개발\r\n// Java,Spring,Back-End\r\n// UnrealEngine,게임개발,UEBlueprints\r\n// Scratch\r\n// Java\r\n// HTML/CSS,웹디자인,취업\r\n// 리버싱,시스템해킹\r\n// Unity,게임개발\r\n// C\r\n// Bootstrap,웹퍼블리싱\r\n// Front-End,Angular\r\n// 데이터시각화,R,ggplot2\r\n// Unity,게임개발\r\n// Git,버전관리시스템\r\n// Back-End,Java,JSP\r\n// Android,Kotlin\r\n// DApp,블록체인,Ethereum\r\n// MATLAB\r\n// Django,웹앱,OpenCV\r\n// Back-End\r\n// 데이터과학,Kaggle\r\n// 모의해킹,정보보안\r\n// Python\r\n// PHP\r\n// Spring,IntelliJIDEA\r\n// 게임개발\r\n// IONIC,모바일앱개발\r\n// JavaScript,알고리즘\r\n// R\r\n// Front-End,Angular\r\n// iOS,모바일앱개발\r\n// Python,빅데이터,데이터분석\r\n// Python,정보보안\r\n// TypeScript,Electron\r\n// 자료구조,Java,알고리즘\r\n// iOSAutolayout,UX/UI\r\n// React,TypeScript\r\n// Python\r\n// 딥러닝,OpenCV\r\n// Linux\r\n// C#\r\n// Front-End,jQuery,웹퍼블리싱\r\n// Front-End,React\r\n// Node.js\r\n// Node.js\r\n// JavaScript\r\n// ATOM\r\n// JavaScript\r\n// 정보처리기사\r\n// RaspberryPi,IoT\r\n// 양자컴퓨팅,알고리즘\r\n// jQuery,웹퍼블리싱,인터랙티브웹\r\n// RMarkdown,LaTeX,R\r\n// PHP\r\n// WindowsServer\r\n// Back-End,클라우드,서버리스\r\n// Kotlin\r\n// Linux\r\n// R,데이터분석\r\n// Python,웹개발,Flask\r\n// Tensorflow,딥러닝,OpenCV\r\n// Android,모바일앱개발\r\n// Python\r\n// C#,MSSQL\r\n// Oracle,데이터베이스\r\n// IONIC,머신러닝,딥러닝\r\n// SQL,데이터분석,데이터베이스\r\n// Spring,전자정부프레임워크\r\n// Tensorflow,딥러닝,RaspberryPi\r\n// R,데이터분석\r\n// Python,웹크롤링\r\n// Python\r\n// Java,머신러닝,Weka\r\n// Back-End,Angular,PWA\r\n// C,Unity\r\n// iOS,Swift,모바일앱개발\r\n// iOS,Swift\r\n// 인공지능,R\r\n// JavaScript,Angular\r\n// 네트워크\r\n// 모의해킹,정보보안\r\n// Swift\r\n// 데이터베이스,Firebase\r\n// DApp,Ethereum\r\n// Vue.js,Django,웹개발\r\n// Python,RaspberryPi,IoT\r\n// 데이터분석,데이터베이스,ProcessMining\r\n// Back-End,Linux\r\n// UnrealEngine,게임개발,UEBlueprints\r\n// DApp,Ethereum,Solidity\r\n// SQL,Oracle,PL/SQL\r\n// Python,빅데이터\r\n// React,DApp,Ethereum\r\n// Unity\r\n// Back-End,Node.js\r\n// Java\r\n// Unity,VR/AR\r\n// Python\r\n// HTML/CSS,데이터시각화\r\n// Git,버전관리시스템\r\n// Pandas,데이터분석\r\n// HTML/CSS,Sass,웹퍼블리싱\r\n// R\r\n// iOS,Swift\r\n// IONIC,PWA\r\n// 인공지능,강화학습\r\n// Android,모바일앱개발\r\n// UnrealEngine,게임개발,UEBlueprints\r\n// MongoDB\r\n// 웹앱,R\r\n// Ruby,RubyonRails\r\n// 머신러닝,딥러닝,OpenCV\r\n// Java,JSP\r\n// HTML/CSS\r\n// Back-End,JavaScript,Node.js\r\n// Android,모의해킹,정보보안\r\n// iOS,모바일앱개발\r\n// iOS,Objective-C\r\n// iOS,Swift\r\n// iOS,Swift,모바일앱개발\r\n// Swift,모바일앱개발\r\n// PHP\r\n// HTML/CSS\r\n// Back-End,SpringBoot\r\n// Arduino\r\n// C#,Unity,게임개발\r\n// Scratch,Entry\r\n// 데이터베이스,MSSQL\r\n// HTML/CSS,웹개발\r\n// HTML/CSS,EPUB,Sigil\r\n// SQL,데이터베이스,MariaDB\r\n// IONIC\r\n// 웹앱,웹개발,모바일앱개발\r\n// 데이터시각화,디지털마케팅,데이터분석\r\n// Java,Android\r\n// Kotlin,SpringBoot\r\n// Java,Android,모바일앱개발\r\n// 블로그,HTML/CSS\r\n// Python,Linux,RaspberryPi\r\n// Python,데이터베이스\r\n// Python\r\n// Java,Android,SQLite\r\n// 수학,Scratch\r\n// Java\r\n// Node.js,Electron,Socket.io\r\n// 강화학습,데이터과학\r\n// jQuery,Ajax\r\n// AppInventor\r\n// iOS,Swift,모바일앱개발\r\n// ES6\r\n// ASP.NETCore\r\n// 도메인\r\n// iOS,Firebase\r\n// C#,.NET\r\n// C#\r\n// CUDA\r\n// Python,머신러닝\r\n// IONIC,Firebase,모바일앱개발\r\n// Python,업무자동화\r\n// Python\r\n// Kotlin\r\n// Android,Firebase\r\n// JavaScript,ES6\r\n// TypeScript\r\n// Linux\r\n// 딥러닝,인공지능,강화학습\r\n// 데이터분석,Elasticsearch,Logstash\r\n// Django\r\n// 사무실무,취업,코딩테스트\r\n// 자료구조,C\r\n// C#\r\n// Unity\r\n// C++,모바일앱개발\r\n// Android\r\n// R,데이터분석\r\n// Kubernetes,클라우드\r\n// Python,MATLAB\r\n// Azure,DevOps\r\n// Python,알고리즘\r\n// 블록체인\r\n// Front-End,Java,취업\r\n// JavaScript\r\n// 블록체인,Ethereum\r\n// Unity,게임개발\r\n// Unity,게임개발\r\n// HTML/CSS\r\n// DApp,블록체인,Ethereum\r\n// Python,웹크롤링\r\n// 블록체인,Solidity\r\n// Java,JSP,웹개발\r\n// Android,Firebase\r\n// iOS,Firebase\r\n// 정보보안,CheatEngine\r\n// Scratch\r\n// iOS,Swift,모바일앱개발\r\n// IONIC,모바일앱개발\r\n// C++\r\n// 애자일\r\n// Powershell\r\n// IONIC,TypeScript\r\n// AWS\r\n// Angular\r\n// 알고리즘\r\n// 웹디자인,웹퍼블리싱,웹개발\r\n// iOS,Swift\r\n// C,C++\r\n// C#\r\n// iOS,Swift,모바일앱개발\r\n// C\r\n// Python\r\n// Unity,게임개발\r\n// Python\r\n// C#\r\n// 웹기획,HTML/CSS,웹퍼블리싱\r\n// Java,모바일앱개발\r\n// Front-End,HTML/CSS,웹퍼블리싱\r\n// Android,정보보안\r\n// 알고리즘\r\n// Android,Firebase,모바일앱개발\r\n// C++,UnrealEngine,게임개발\r\n// XpressEngine\r\n// R\r\n// Swift\r\n// Back-End,SpringBoot,ExtJS\r\n// Android,모바일앱개발\r\n// JavaScript\r\n// C\r\n// Objective-C\r\n// Django\r\n// Python,웹크롤링\r\n// Wordpress,WooCommerce\r\n// Android\r\n// 웹개발\r\n// Unity,게임개발\r\n// Arduino\r\n// jQuery\r\n// HTML/CSS,웹퍼블리싱\r\n// SQL,데이터베이스\r\n// Java,Android,모바일앱개발\r\n// iOS,모바일앱개발\r\n// 게임개발\r\n// PHP\r\n// Git\r\n// 딥러닝,인공지능,강화학습\r\n// C++\r\n// Python\r\n// Wordpress,웹개발\r\n// Linux\r\n// Java,웹개발\r\n// Node.js,데이터베이스\r\n// Java,Android\r\n// IONIC,모바일앱개발\r\n// JavaScript,모바일앱개발,XML\r\n// Java\r\n// 취업,면접,포트폴리오\r\n// TypeScript,Front-End,ES6\r\n// JavaScript,React,Node.js\r\n// Python\r\n// 인터랙티브웹,JavaScript,Front-End\r\n// Svelte,Front-End,Rollup\r\n// HTML/CSS,JavaScript,웹개발\r\n// React,Redux,Node.js\r\n// Python,딥러닝,데이터분석\r\n// Front-End,JavaScript,Vue.js\r\n// SpringCloud,Back-End,SpringBoot\r\n// 클론코딩,React,TypeScript\r\n// 취업,면접,포트폴리오\r\n// JavaScript,React,Node.js\r\n// C++\r\n// TypeScript,Front-End,ES6\r\n// SpringBoot,Spring,Java\r\n// Node.js,웹앱,Express\r\n// Java\r\n// 인터랙티브웹,클론코딩,JavaScript\r\n","import { useCallback, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"../../../../../store\";\r\nimport { setCurrentInput } from \"../../../../../store/action/search-bar\";\r\nimport {\r\n  setSuggestion,\r\n  ISetSuggestion,\r\n} from \"../../../../../store/action/search-suggestion\";\r\n\r\nimport { keywordsEnglishAsArr, keywordsKoreanAsArr } from \"../SearchData\";\r\n\r\nconst koreanCheckReg = /[가-힣]/;\r\n/**\r\n * return true if input is Korean, nor false because it's English\r\n */\r\nconst isKorean = (input: string) => input.match(koreanCheckReg) !== null;\r\n\r\n// const englishCheckReg = /[a-zA-Z]/;\r\n// const othersCheckReg = /[^ㄱ-ㅎ가-힣a-zA-Z ]/;\r\n\r\nexport const useSuggestion = () => {\r\n  const nextInputAwaitTimer = useRef<NodeJS.Timeout>();\r\n  const dispatch = useDispatch();\r\n  const suggestions = useSelector(\r\n    (state: TCombinedStates) => state.searchSuggestion.suggestions\r\n  );\r\n  const _setSuggestion = useCallback(\r\n    (suggestion: string[]) => dispatch(setSuggestion(suggestion)),\r\n    [dispatch]\r\n  );\r\n  const _setInput = useCallback(\r\n    (input: string) => dispatch(setCurrentInput(input)),\r\n    [dispatch]\r\n  );\r\n\r\n  return useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      _setInput(e.target.value);\r\n      // dispose the time if it already exists\r\n      if (nextInputAwaitTimer.current) {\r\n        clearTimeout(nextInputAwaitTimer.current);\r\n      }\r\n\r\n      nextInputAwaitTimer.current = setTimeout(() => {\r\n        const { value } = e.target;\r\n        // match regex with input and decide whether using Korean or English\r\n        // and suggest\r\n\r\n        suggest(\r\n          isKorean(value) ? keywordsKoreanAsArr : keywordsEnglishAsArr,\r\n          value,\r\n          suggestions,\r\n          _setSuggestion\r\n        );\r\n      }, 300);\r\n    },\r\n    [keywordsEnglishAsArr, keywordsKoreanAsArr, _setSuggestion]\r\n  );\r\n};\r\n\r\nconst suggest = (\r\n  keywords: string[],\r\n  input: string,\r\n  suggestions: string[],\r\n  _setSuggestion: (suggestion: string[]) => ISetSuggestion\r\n) => {\r\n  // no empty input allowed\r\n  if (input === \"\") {\r\n    // wipe out the previous suggestions if any remains\r\n    // if (suggestions && suggestions.length > 0) {\r\n    // }\r\n    _setSuggestion([]);\r\n\r\n    return;\r\n  }\r\n\r\n  // filter the keywords including input\r\n  const matchedKeywords: string[] = keywords.filter((keywords: string) =>\r\n    keywords.includes(input)\r\n  );\r\n  // disapatch action to the store\r\n  _setSuggestion(matchedKeywords);\r\n\r\n  // console.log(\r\n  //   `keywords query count : ${keywords.length}`,\r\n  //   `\\nmatched keywords : ${matchedKeywords}`\r\n  // );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { TCombinedStates } from \"../../../../../store\";\r\nimport { useSuggestion } from \"./useSuggestion\";\r\n\r\nexport const useSearchBarSuggestion = () => {\r\n  const onSearchBarInputChange = useSuggestion();\r\n\r\n  const suggestions = useSelector(\r\n    (state: TCombinedStates) => state.searchSuggestion.suggestions\r\n  );\r\n  const suggestionJSX = useMemo(\r\n    () =>\r\n      suggestions && suggestions.length > 0\r\n        ? suggestions?.map((suggestion: string) => (\r\n            <li key={uuid()}>{suggestion}</li>\r\n          ))\r\n        : null,\r\n    [suggestions]\r\n  );\r\n\r\n  return {\r\n    onSearchBarInputChange,\r\n    suggestionJSX,\r\n  };\r\n};\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { TCombinedStates } from \"../../../../../store\";\r\n\r\nimport { setSelectedKeyword } from \"../../../../../store/action/search\";\r\n\r\nexport const useSearchBarSelectedKeywords = (\r\n  dispatch: Dispatch<any>\r\n): JSX.Element[] => {\r\n  const selectedKeywords = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedKeywords\r\n  );\r\n\r\n  const removeKeyword = useCallback(\r\n    (keyword: string) => dispatch(setSelectedKeyword(keyword)),\r\n    []\r\n  );\r\n\r\n  const onClickSelectedKeyword = useCallback(\r\n    (e: React.MouseEvent<HTMLLIElement>) =>\r\n      removeKeyword((e.target as HTMLElement)?.innerText),\r\n    []\r\n  );\r\n\r\n  // click to remove\r\n\r\n  return useMemo(\r\n    () =>\r\n      selectedKeywords?.map(keyword => (\r\n        <li\r\n          key={uuid()}\r\n          className=\"searchBar--selected-keywords\"\r\n          onClick={onClickSelectedKeyword}\r\n        >\r\n          {keyword}\r\n        </li>\r\n      )),\r\n    [selectedKeywords]\r\n  );\r\n};\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { TCombinedStates } from \"../../../../../store\";\r\n\r\nimport { setSelectedPlatform } from \"../../../../../store/action/search\";\r\n\r\nexport const useSearchBarSelectedPlatforms = (\r\n  dispatch: Dispatch<any>\r\n): JSX.Element[] => {\r\n  const selectedPlatforms = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedPlatforms\r\n  );\r\n\r\n  const removePlatform = useCallback(\r\n    (platform: string) => dispatch(setSelectedPlatform(platform)),\r\n    []\r\n  );\r\n\r\n  const onClickSelectedPlatform = useCallback(\r\n    (e: React.MouseEvent<HTMLLIElement>) =>\r\n      removePlatform((e.target as HTMLElement)?.innerText),\r\n    []\r\n  );\r\n\r\n  // click to remove\r\n\r\n  return useMemo(\r\n    () =>\r\n      selectedPlatforms?.map(platform => (\r\n        <li\r\n          key={uuid()}\r\n          className=\"searchBar--selected-platforms\"\r\n          onClick={onClickSelectedPlatform}\r\n        >\r\n          {platform}\r\n        </li>\r\n      )),\r\n    [selectedPlatforms]\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  closeSearchBar,\r\n  openSearchBar,\r\n  toggleSearchBar,\r\n} from \"../../../../../store/action/search-bar\";\r\n\r\nimport { TCombinedStates } from \"../../../../../store\";\r\n\r\nexport const useToggleSearchBar = () => {\r\n  const isSearchBarClosed = useSelector(\r\n    (state: TCombinedStates) => state.searchBar.isSearchBarClose,\r\n    shallowEqual\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const _toggleSearchBar = useCallback(() => dispatch(toggleSearchBar()), []);\r\n  const _openSearchBar = useCallback(() => dispatch(openSearchBar()), []);\r\n  const _closeSearchBar = useCallback(() => dispatch(closeSearchBar()), []);\r\n\r\n  return {\r\n    isSearchBarClosed,\r\n    _toggleSearchBar,\r\n    _openSearchBar,\r\n    _closeSearchBar,\r\n  };\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"../../../../store\";\r\n\r\nimport { clearSuggestion } from \"../../../../store/action/search-suggestion\";\r\nimport { setSelectedKeyword } from \"../../../../store/action/search\";\r\nimport {\r\n  setCurrentInput,\r\n  ToggleInvalidKeywordWarningRef,\r\n} from \"../../../../store/action/search-bar\";\r\n\r\nimport { useSearchBarSuggestion } from \".\";\r\n\r\nconst SearchBarInput = () => {\r\n  const { onSearchBarInputChange } = useSearchBarSuggestion();\r\n\r\n  const input = useSelector(\r\n    (state: TCombinedStates) => state.searchBar.input,\r\n    shallowEqual\r\n  );\r\n\r\n  const suggestions = useSelector(\r\n    (state: TCombinedStates) => state.searchSuggestion.suggestions\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const _setSelectedKeyword = useCallback(\r\n    (keyword: string) => dispatch(setSelectedKeyword(keyword)),\r\n    [dispatch]\r\n  );\r\n  const clearCurrentInput = useCallback(\r\n    (input: string) => dispatch(setCurrentInput(input)),\r\n    [dispatch]\r\n  );\r\n  const _clearSuggestion = useCallback(() => dispatch(clearSuggestion()), [\r\n    dispatch,\r\n  ]);\r\n  const _toggleInvalidKeywordWarning = useCallback(\r\n    () => dispatch(ToggleInvalidKeywordWarningRef()),\r\n    [dispatch]\r\n  );\r\n\r\n  const onSubmitInput = useCallback(\r\n    (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        if (!suggestions.includes(input)) {\r\n          _toggleInvalidKeywordWarning();\r\n          setTimeout(() => _toggleInvalidKeywordWarning(), 3000);\r\n        } else {\r\n          // add input to selected keywords\r\n          _setSelectedKeyword(input);\r\n        }\r\n\r\n        // wipe out the current input & suggestion\r\n        clearCurrentInput(\"\");\r\n        _clearSuggestion();\r\n      }\r\n    },\r\n    [\r\n      input,\r\n      suggestions,\r\n      _setSelectedKeyword,\r\n      clearCurrentInput,\r\n      _clearSuggestion,\r\n      _toggleInvalidKeywordWarning,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"searchBar--input\"\r\n      placeholder=\"키워드를 입력해서 강의를 찾으세요\"\r\n      onChange={onSearchBarInputChange}\r\n      onKeyPress={onSubmitInput}\r\n      value={input}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBarInput;\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"~/src/store\";\r\n\r\nimport {\r\n  AddButton,\r\n  SearchButton,\r\n  ClearButton,\r\n  useSearchBarSuggestion,\r\n  useSearchBarSelectedKeywords,\r\n  useSearchBarSelectedPlatforms,\r\n  useToggleSearchBar,\r\n} from \"./\";\r\nimport SearchBarInput from \"./SearchBarInput\";\r\n\r\nimport \"./_SearchBar.scss\";\r\n\r\nconst SearchBar: React.FC<{\r\n  searchIcon: JSX.Element;\r\n}> = ({ searchIcon }) => {\r\n  const dispatch = useDispatch();\r\n  const { suggestionJSX } = useSearchBarSuggestion();\r\n  const selectedPlatformsJSX = useSearchBarSelectedPlatforms(dispatch);\r\n  const selectedKeywordsJSX = useSearchBarSelectedKeywords(dispatch);\r\n  const { _toggleSearchBar: toggleSearchBar } = useToggleSearchBar();\r\n\r\n  const isInvalidKeyword = useSelector(\r\n    (state: TCombinedStates) => state.searchBar.isInvalidKeyword,\r\n    shallowEqual\r\n  );\r\n\r\n  const invalidKeywordWarningJSX = isInvalidKeyword && (\r\n    <p className=\"searchBar--invalid-keyword-indicator active\">\r\n      없는\r\n      <br />\r\n      키워드!\r\n      <br />\r\n      입니다!\r\n    </p>\r\n  );\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <SearchBarInput />\r\n      <div onClick={toggleSearchBar}>{searchIcon}</div>\r\n      {invalidKeywordWarningJSX}\r\n      <AddButton />\r\n      <SearchButton />\r\n      <div className=\"searchBar--suggestions\">{suggestionJSX}</div>\r\n      <div className=\"searchBar--separator\"></div>\r\n      <p className=\"searchBar--selectedKeywords-placeholder\">\r\n        선택한 키워드들...\r\n      </p>\r\n      <div className=\"searchBar--selected\">\r\n        {selectedPlatformsJSX}\r\n        {selectedKeywordsJSX}\r\n      </div>\r\n      <ClearButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useMemo } from \"react\";\r\nimport { toggleSearchBar } from \"../../../../store/action/search-bar\";\r\n\r\nimport { getIcon } from \"../../../../common\";\r\nimport SearchBar from \"../search-bar/SearchBar\";\r\nimport { useToggleSearchBar } from \"../search-bar\";\r\n\r\nimport \"./_SearchCtrl.scss\";\r\n\r\nconst SearchCtrl: React.FC<{}> = () => {\r\n  const { isSearchBarClosed, _toggleSearchBar } = useToggleSearchBar();\r\n\r\n  const searchIcon: JSX.Element = useMemo(\r\n    () => getIcon(\"Search\", toggleSearchBar, { fontSize: \"2rem\" })!,\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"searchCtrl\">\r\n      {!isSearchBarClosed && <SearchBar searchIcon={searchIcon} />}\r\n      <button\r\n        className={\r\n          isSearchBarClosed ? \"searchBar-toggle\" : \"searchBar-toggle active\"\r\n        }\r\n        onClick={_toggleSearchBar}\r\n      >\r\n        {searchIcon}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchCtrl;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"../../../store\";\r\n\r\nimport { initFetch_RetrieveLectures } from \"../../../store/action/search-async\";\r\n\r\nimport SearchCtrl from \"./search-ctrl/SearchCtrl\";\r\nimport Loading from \"../../../component/loading/Loading\";\r\n\r\nimport \"./_Search.scss\";\r\n\r\nconst Search: React.FC<{}> = () => {\r\n  useInitFetch();\r\n\r\n  const isSearchLoading = useSelector(\r\n    (state: TCombinedStates) => state.searchAsync.isLoading,\r\n    shallowEqual\r\n  );\r\n\r\n  // const errorJSX = useSelector(\r\n  //   (state: TCombinedStates) => state.searchAsync.err,\r\n  //   shallowEqual\r\n  // );\r\n  // if (errorJSX) {\r\n  //   // TODO: Render Error\r\n  // }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      {isSearchLoading ? <Loading /> : <SearchCtrl />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useInitFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const _initFetch = useCallback(\r\n    () => dispatch(initFetch_RetrieveLectures()),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    _initFetch();\r\n  }, []);\r\n};\r\n\r\nexport default Search;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useToggleSearchBar } from \"../search-bar\";\r\n\r\nimport \"./_KeywordSelector.scss\";\r\n\r\nconst KeywordSelector: React.FC<{\r\n  title: string;\r\n  keywords: Array<string>;\r\n  keywordsClassName: string;\r\n  dispatchKeyword: (selectedPlatform: string) => void;\r\n}> = ({ title, keywords, keywordsClassName, dispatchKeyword }) => {\r\n  const { _openSearchBar } = useToggleSearchBar();\r\n\r\n  const onSelectKeyword = useCallback(\r\n    (e: React.MouseEvent<HTMLParagraphElement>) => {\r\n      e.stopPropagation();\r\n      // current element is p tag\r\n      const el = e.target as HTMLParagraphElement;\r\n\r\n      dispatchKeyword(el?.innerText);\r\n      // toggle background color of parent element (li tag)\r\n      (el?.parentElement as HTMLLIElement).classList.toggle(\"active\");\r\n      _openSearchBar();\r\n    },\r\n    []\r\n  );\r\n\r\n  const onSelectKeywordLiElement = useCallback(\r\n    (e: React.MouseEvent<HTMLLIElement>) => {\r\n      const el = e.target as HTMLLIElement;\r\n\r\n      // // apply backgroud color\r\n      el?.classList.toggle(\"active\");\r\n\r\n      // dispatch to the store with the selected keyword or platform\r\n      dispatchKeyword(\r\n        (el?.firstElementChild as HTMLParagraphElement).innerText\r\n      );\r\n      _openSearchBar();\r\n    },\r\n    []\r\n  );\r\n\r\n  // const selectedKeywords = useSelector(\r\n  //   (state: TCombinedStates) => state.search.selectedKeywords\r\n  // );\r\n\r\n  // const selectedPlatforms = useSelector(\r\n  //   (state: TCombinedStates) => state.search.selectedPlatforms\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   // 1. compare selected keywords with\r\n  // }, [selectedKeywords]);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, [selectedPlatforms]);\r\n\r\n  const selectedKeywordsJSX = useMemo(\r\n    () =>\r\n      keywords?.map((keyword: string) => (\r\n        <li\r\n          key={uuid()}\r\n          onClick={onSelectKeywordLiElement}\r\n          className={keywordsClassName}\r\n        >\r\n          <p onClick={onSelectKeyword}>{keyword}</p>\r\n        </li>\r\n      )),\r\n    [keywords]\r\n  );\r\n\r\n  return (\r\n    <div className=\"keywordSelector\">\r\n      <div className=\"keywordSelector-left\">\r\n        <p>{title}</p>\r\n      </div>\r\n      <div className=\"keywordSelector-right\">\r\n        <ul>{selectedKeywordsJSX}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeywordSelector;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setSelectedKeyword,\r\n  setSelectedPlatform,\r\n} from \"../../../../store/action/search\";\r\n\r\nimport {\r\n  platformsEnglishAsArr,\r\n  keywordsKoreanAsArr,\r\n  keywordsEnglishAsArr,\r\n} from \"../search-bar/SearchData\";\r\n\r\nimport KeywordSelector from \"./KeywordSelector\";\r\n\r\nimport \"./_KeywordSelectorCtrl.scss\";\r\n\r\nconst KeywordSelectorCtrl = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const _setSelectedKeyword = useCallback(\r\n    (selectedKeyword: string) => dispatch(setSelectedKeyword(selectedKeyword)),\r\n    []\r\n  );\r\n\r\n  const _setSelectedPlatform = useCallback(\r\n    (selectedPlatform: string) =>\r\n      dispatch(setSelectedPlatform(selectedPlatform)),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"keywordSelectorCtrl\">\r\n      <KeywordSelector\r\n        title=\"플랫폼\"\r\n        keywords={platformsEnglishAsArr}\r\n        keywordsClassName=\"platforms\"\r\n        dispatchKeyword={_setSelectedPlatform}\r\n      />\r\n      <KeywordSelector\r\n        title=\"프로그래밍 언어 / API / 프레임워크\"\r\n        keywords={[...keywordsKoreanAsArr, ...keywordsEnglishAsArr]}\r\n        // keywords={[\r\n        //   ...keywordsKoreanAsArr.slice(keywordsKoreanAsArr.length / 2),\r\n        //   ...keywordsEnglishAsArr.slice(0, keywordsEnglishAsArr.length / 2),\r\n        // ]}\r\n        keywordsClassName=\"keywords\"\r\n        dispatchKeyword={_setSelectedKeyword}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeywordSelectorCtrl;\r\n","import React, { useMemo } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { TCombinedStates } from \"~/src/store\";\r\n\r\nimport \"./_SearchResultSummary.scss\";\r\n\r\nconst SearchResultSummary = () => {\r\n  const selectedKeywords = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedKeywords\r\n  );\r\n\r\n  const selectedPlatforms = useSelector(\r\n    (state: TCombinedStates) => state.search.selectedPlatforms\r\n  );\r\n\r\n  const searchResultCount = useSelector(\r\n    (state: TCombinedStates) => state.searchResult.lectures.length,\r\n    shallowEqual\r\n  );\r\n\r\n  const selectedKeywordsJSX = useMemo(\r\n    () =>\r\n      selectedKeywords?.map((keyword: string) => (\r\n        <li key={uuid()} className=\"searchResult-summary--keyword\">\r\n          {keyword}\r\n        </li>\r\n      )),\r\n    [selectedKeywords]\r\n  );\r\n\r\n  const selectedPlatformsJSX = useMemo(\r\n    () =>\r\n      selectedPlatforms?.map((platform: string) => (\r\n        <li key={uuid()} className=\"searchResult-summary--platform\">\r\n          {platform}\r\n        </li>\r\n      )),\r\n    [selectedPlatforms]\r\n  );\r\n\r\n  return (\r\n    <div className=\"searchResult-summary\">\r\n      <div>\r\n        <ul>{selectedPlatformsJSX}</ul>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <ul>{selectedKeywordsJSX}</ul>\r\n        <span>&nbsp;으로 찾은 결과</span>\r\n      </div>\r\n      <div>\r\n        총&nbsp;\r\n        <span className=\"searchResult-summary--lectures-count\">\r\n          {searchResultCount}\r\n        </span>\r\n        &nbsp;개 입니다.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultSummary;\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nimport {\r\n  EBookmarkAsync_QueryAllBookmarks_ActionType,\r\n  IBookmarkData,\r\n  TStatusCode,\r\n} from \"~/src/typings\";\r\nimport {\r\n  IFetchRequestAction_QueryAllBookmarks,\r\n  IFetchSucceedAction_QueryAllBookmarks,\r\n  IFetchFailAction_QueryAllBookmarks,\r\n} from \"./Actions\";\r\nimport { get_QueryAllMyBookmarks } from \"~/src/service/UserService\";\r\n\r\nconst fetchRequest_QueryAllBookmarks = (): IFetchRequestAction_QueryAllBookmarks => ({\r\n  type: EBookmarkAsync_QueryAllBookmarks_ActionType.FetchRequest,\r\n});\r\n\r\nconst fetchSucceed_QueryAllBookmarks = (\r\n  statusCode: TStatusCode,\r\n  bookmarks: IBookmarkData[]\r\n): IFetchSucceedAction_QueryAllBookmarks => ({\r\n  type: EBookmarkAsync_QueryAllBookmarks_ActionType.FetchSucceed,\r\n  statusCode,\r\n  bookmarks,\r\n});\r\n\r\nconst fetchFail_QueryAllBookmarks = (\r\n  err: string\r\n): IFetchFailAction_QueryAllBookmarks => ({\r\n  type: EBookmarkAsync_QueryAllBookmarks_ActionType.FetchFail,\r\n  err,\r\n});\r\n\r\nexport const initFetch_QueryAllBookmarks = (userID: string) => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  try {\r\n    dispatch(fetchRequest_QueryAllBookmarks());\r\n    const { bookmarkData, status } = await get_QueryAllMyBookmarks(userID);\r\n    dispatch(fetchSucceed_QueryAllBookmarks(status, bookmarkData));\r\n  } catch (err) {\r\n    dispatch(fetchFail_QueryAllBookmarks(err));\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport \"./_Backdrop.scss\";\r\n\r\ninterface IBackdropProps {\r\n  isUsed: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst Backdrop: React.FC<IBackdropProps> = ({ isUsed, onClose }) => (\r\n  <Fragment>{isUsed ? <div className=\"backdrop\" onClick={onClose}></div> : null}</Fragment>\r\n);\r\n\r\nexport default Backdrop;\r\n","import { ICommentData, TStatusCode } from \"../typings\";\r\nimport { axiosInstance_Server } from \"./Axios\";\r\n\r\nexport const post_AddComment = async (\r\n  lectureID: number,\r\n  commentData: ICommentData\r\n): Promise<TStatusCode> => {\r\n  // TODO: lectureID validation\r\n\r\n  try {\r\n    const { status } = await axiosInstance_Server.post(`/comments`, {\r\n      lectureID,\r\n      commentData,\r\n    });\r\n    return status;\r\n  } catch (err) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n\r\nexport const patch_fixComment = async (\r\n  commentData: ICommentData\r\n): Promise<TStatusCode> => {\r\n  // TODO: commentID Validation\r\n\r\n  try {\r\n    const { status } = await axiosInstance_Server.patch(\r\n      `/comments/${commentData.commentID}`,\r\n      {\r\n        commentData,\r\n      }\r\n    );\r\n    return status;\r\n  } catch (err) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n\r\nexport const delete_RemoveComment = async (\r\n  commentID: number\r\n): Promise<TStatusCode> => {\r\n  // TODO: commentID Validation\r\n\r\n  try {\r\n    const { status } = await axiosInstance_Server.delete(\r\n      `/comments/${commentID}`\r\n    );\r\n    return status;\r\n  } catch (err) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n\r\nexport const get_QueryAllComments = async (\r\n  lectureID: number\r\n): Promise<{\r\n  commentData: ICommentData[];\r\n  status: TStatusCode;\r\n}> => {\r\n  try {\r\n    const { data, status } = await axiosInstance_Server.get(\r\n      `/comments/lectures/${lectureID}`\r\n    );\r\n    const commentData = data as ICommentData[];\r\n    return { commentData, status };\r\n  } catch (err) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { post_AddComment } from \"~/src/service/CommentService\";\r\n\r\nimport {\r\n  ICommentData,\r\n  ECommentAsync_AddComment_ActionType,\r\n} from \"~/src/typings\";\r\nimport {\r\n  IFetchRequestAction_AddComment,\r\n  IFetchSucceedAction_AddComment,\r\n  IFetchFailAction_AddComment,\r\n} from \"./Actions\";\r\n\r\nconst fetchRequest_AddComment = (): IFetchRequestAction_AddComment => ({\r\n  type: ECommentAsync_AddComment_ActionType.FetchRequest,\r\n});\r\n\r\nconst fetchSucceed_AddComment = (\r\n  statusCode: number\r\n): IFetchSucceedAction_AddComment => ({\r\n  type: ECommentAsync_AddComment_ActionType.FetchSucceed,\r\n  statusCode,\r\n});\r\n\r\nconst fetchFail_AddComment = (err: string): IFetchFailAction_AddComment => ({\r\n  type: ECommentAsync_AddComment_ActionType.FetchFail,\r\n  err,\r\n});\r\n\r\nexport const initFetch_AddComment = (\r\n  lectureID: number,\r\n  commentData: ICommentData\r\n) => async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\r\n  // TODO: lectureID validation\r\n  // TODO: cooment validation\r\n\r\n  try {\r\n    dispatch(fetchRequest_AddComment());\r\n    const status = await post_AddComment(lectureID, commentData);\r\n    dispatch(fetchSucceed_AddComment(status));\r\n  } catch (err) {\r\n    dispatch(fetchFail_AddComment(err));\r\n  }\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { patch_fixComment } from \"~/src/service/CommentService\";\r\n\r\nimport {\r\n  ECommentAsync_FixComment_ActionType,\r\n  ICommentData,\r\n  TStatusCode,\r\n} from \"~/src/typings\";\r\n\r\nimport {\r\n  IFetchRequestAction_FixComment,\r\n  IFetchSucceedAction_FixComment,\r\n  IFetchFailAction_FixComment,\r\n} from \"./Actions\";\r\n\r\nconst fetchRequest_FixComment = (): IFetchRequestAction_FixComment => ({\r\n  type: ECommentAsync_FixComment_ActionType.FetchRequest,\r\n});\r\n\r\nconst fetchSucceed_FixComment = (\r\n  status: TStatusCode\r\n): IFetchSucceedAction_FixComment => ({\r\n  type: ECommentAsync_FixComment_ActionType.FetchSucceed,\r\n  status,\r\n});\r\n\r\nconst fetchFail_FixComment = (err: string): IFetchFailAction_FixComment => ({\r\n  type: ECommentAsync_FixComment_ActionType.FetchFail,\r\n  err,\r\n});\r\n\r\nexport const initFetch_FixComment = (fixedCommentData: ICommentData) => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  try {\r\n    dispatch(fetchRequest_FixComment());\r\n    const status = await patch_fixComment(fixedCommentData);\r\n    dispatch(fetchSucceed_FixComment(status));\r\n  } catch (err) {\r\n    dispatch(fetchFail_FixComment(err));\r\n  }\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { get_QueryAllComments } from \"~/src/service/CommentService\";\r\nimport {\r\n  ECommentAsync_QueryAllComments_ActionType,\r\n  ICommentData,\r\n  TStatusCode,\r\n} from \"~/src/typings\";\r\nimport {\r\n  IFetchRequestAction_QueryAllComments,\r\n  IFetchSucceedAction_QueryAllComments,\r\n  IFetchFailedAction_QueryAllComments,\r\n} from \"./Actions\";\r\n\r\nconst fetchRequest_QueryAllComments = (): IFetchRequestAction_QueryAllComments => ({\r\n  type: ECommentAsync_QueryAllComments_ActionType.FetchRequest,\r\n});\r\n\r\nconst fetchSucceed_QueryAllComments = (\r\n  comments: ICommentData[],\r\n  status: TStatusCode\r\n): IFetchSucceedAction_QueryAllComments => ({\r\n  type: ECommentAsync_QueryAllComments_ActionType.FetchSucceed,\r\n  comments,\r\n  status,\r\n});\r\n\r\nconst FetchFail_QueryAllComments = (\r\n  err: string\r\n): IFetchFailedAction_QueryAllComments => ({\r\n  type: ECommentAsync_QueryAllComments_ActionType.FetchFail,\r\n  err,\r\n});\r\n\r\nexport const initFetch_QueryAllComments = (lectureID: number) => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  // TODO: lectureID validation\r\n  try {\r\n    dispatch(fetchRequest_QueryAllComments());\r\n    const { commentData, status } = await get_QueryAllComments(lectureID);\r\n    const comments = commentData as ICommentData[];\r\n    dispatch(fetchSucceed_QueryAllComments(comments, status));\r\n  } catch (err) {\r\n    dispatch(FetchFail_QueryAllComments(err));\r\n  }\r\n};\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { delete_RemoveComment } from \"~/src/service/CommentService\";\r\n\r\nimport {\r\n  ECommentAsync_RemoveComment_ActionType,\r\n  TStatusCode,\r\n} from \"~/src/typings\";\r\nimport {\r\n  IFetchRequestAction_RemoveComment,\r\n  IFetchSucceedAction_RemoveComment,\r\n  IFetchFailAction_RemoveComment,\r\n} from \"./Actions\";\r\n\r\nconst fetchRequest_RemoveComment = (): IFetchRequestAction_RemoveComment => ({\r\n  type: ECommentAsync_RemoveComment_ActionType.FetchRequest,\r\n});\r\n\r\nconst fetchSucceed_RemoveComment = (\r\n  status: TStatusCode\r\n): IFetchSucceedAction_RemoveComment => ({\r\n  type: ECommentAsync_RemoveComment_ActionType.FetchSucceed,\r\n  status,\r\n});\r\n\r\nconst fetchFail_RemoveComment = (\r\n  err: string\r\n): IFetchFailAction_RemoveComment => ({\r\n  type: ECommentAsync_RemoveComment_ActionType.FetchFail,\r\n  err,\r\n});\r\n\r\nexport const initFetch_RemoveComment = (commentID: number) => async (\r\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\r\n) => {\r\n  try {\r\n    dispatch(fetchRequest_RemoveComment());\r\n    const status = await delete_RemoveComment(commentID);\r\n    dispatch(fetchSucceed_RemoveComment(status));\r\n  } catch (err) {\r\n    dispatch(fetchFail_RemoveComment(err));\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./_CommentUserThumbnail.scss\";\r\n\r\ninterface ICommentUserThumbnailProps {\r\n  imageURL: string;\r\n  altName: string;\r\n}\r\n\r\nconst CommentUserThumbnail: React.FC<ICommentUserThumbnailProps> = ({\r\n  imageURL,\r\n  altName,\r\n}) => {\r\n  return (\r\n    <img\r\n      src={imageURL}\r\n      alt={`${altName}'s thumbnail`}\r\n      // TODO: default image in the case of when image is loaded invalid\r\n      className=\"comment--user-thumbnail\"\r\n      loading=\"lazy\"\r\n    ></img>\r\n  );\r\n};\r\n\r\nexport default CommentUserThumbnail;\r\n","import React from \"react\";\r\n\r\nimport \"./_CommentUserName.scss\";\r\n\r\ninterface ICommentUserNameProps {\r\n  name: string;\r\n}\r\n\r\nconst CommentUserName: React.FC<ICommentUserNameProps> = ({ name }) => {\r\n  return <p className=\"comment--user-name\">{name}</p>\r\n};\r\n\r\nexport default CommentUserName;\r\n","import React from \"react\";\r\n\r\nimport \"./_CommentContents.scss\";\r\n\r\ninterface ICommentContentsProps {\r\n  contents: string;\r\n}\r\n\r\nconst CommentContents: React.FC<ICommentContentsProps> = ({ contents }) => {\r\n  return <div className=\"comments-contents\">{contents}</div>;\r\n};\r\n\r\nexport default CommentContents;\r\n","import React from \"react\";\r\n\r\nimport \"./_CommentTextArea.scss\";\r\n\r\nconst CommentTextArea = () => {\r\n  return (\r\n    <div className=\"comment--text-area\">\r\n      <input type=\"text\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentTextArea;\r\n","import React, { useEffect } from \"react\";\r\nimport { get_QueryUser } from \"~/src/service/UserService\";\r\n\r\nexport const useUserData = (\r\n  userID: string,\r\n  setImageURL: React.Dispatch<React.SetStateAction<string>>,\r\n  setUserName: React.Dispatch<React.SetStateAction<string>>\r\n): void =>\r\n  useEffect(() => {\r\n    (async () => {\r\n      const curUser = await get_QueryUser(userID).catch(err => {\r\n        throw new Error(err);\r\n      });\r\n      const { imageUrl: imageURL, name } = curUser.userData!;\r\n      setImageURL(imageURL);\r\n      setUserName(name);\r\n    })();\r\n  }, [userID]);\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { EButtonSize, EButtonType } from \"~/src/typings\";\r\nimport Button from \"../button/Button\";\r\nimport { CommentUserName, CommentUserThumbnail } from \"./comment-element\";\r\nimport CommentTextArea from \"./comment-element/text-area/CommentTextArea\";\r\nimport { useUserData } from \"./useUserData\";\r\n\r\nimport \"./_NewComment.scss\";\r\n\r\ninterface INewCommentProps {\r\n  myUserID: string;\r\n}\r\n\r\nconst NewComment: React.FC<INewCommentProps> = ({ myUserID }) => {\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  useUserData(myUserID, setImageURL, setUserName);\r\n\r\n  // user thumbnail\r\n  const thumbnailJSX = useMemo(\r\n    () => <CommentUserThumbnail imageURL={imageURL} altName={userName} />,\r\n    [imageURL, userName]\r\n  );\r\n\r\n  // user name\r\n  const nameJSX = useMemo(() => <CommentUserName name={userName} />, [\r\n    userName,\r\n  ]);\r\n\r\n  const onSubmit = useCallback((e: React.MouseEvent<HTMLDivElement>) => {}, []);\r\n\r\n  return (\r\n    <div>\r\n      {thumbnailJSX}\r\n      {nameJSX}\r\n      <CommentTextArea />\r\n      <Button\r\n        btnSize={EButtonSize.Small}\r\n        btnType={EButtonType.Alt}\r\n        onClick={onSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewComment;\r\n","import React from \"react\";\r\n\r\nimport \"./_CommentCreatedAt.scss\";\r\n\r\ninterface ICommentCreatedAtProps {\r\n  createdAt: Date;\r\n}\r\n\r\nconst CommentCreatedAt: React.FC<ICommentCreatedAtProps> = ({ createdAt }) => {\r\n  return <div className=\"comment--created-at\">{createdAt}</div>;\r\n};\r\n\r\nexport default CommentCreatedAt;\r\n","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { EButtonSize, EButtonType, ICommentData } from \"~/src/typings\";\r\nimport Button from \"../button/Button\";\r\nimport {\r\n  CommentUserName,\r\n  CommentUserThumbnail,\r\n  CommentContents,\r\n} from \"./comment-element\";\r\nimport CommentCreatedAt from \"./comment-element/createdAt/CommentCreatedAt\";\r\nimport { useUserData } from \"./useUserData\";\r\n\r\ninterface ICommentProps {\r\n  comment: ICommentData;\r\n  isMyComment: boolean;\r\n}\r\n\r\nconst OtherComment: React.FC<ICommentProps> = ({\r\n  comment,\r\n  isMyComment = false,\r\n}) => {\r\n  const [imageURL, setImageURL] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [contents, setContents] = useState(\"\");\r\n  const [createdAt, setCreatedAt] = useState<Date>();\r\n\r\n  useUserData(comment.userID, setImageURL, setUserName);\r\n\r\n  // user thumbnail\r\n  const thumbnailJSX = useMemo(\r\n    () => <CommentUserThumbnail imageURL={imageURL} altName={userName} />,\r\n    [imageURL, userName]\r\n  );\r\n\r\n  // user name\r\n  const nameJSX = useMemo(() => <CommentUserName name={userName} />, [\r\n    userName,\r\n  ]);\r\n\r\n  // contents\r\n  useEffect(() => {\r\n    setContents(comment.contents);\r\n  }, [comment.contents]);\r\n\r\n  const contentsJSX = useMemo(() => <CommentContents contents={contents} />, [\r\n    contents,\r\n  ]);\r\n\r\n  // created at\r\n  useEffect(() => {\r\n    setCreatedAt(comment.createdAt);\r\n  }, [comment.createdAt]);\r\n\r\n  const createdAtJSX = useMemo(\r\n    () => <CommentCreatedAt createdAt={createdAt!} />,\r\n    [createdAt]\r\n  );\r\n\r\n  const onDelete = useCallback((e: React.MouseEvent<HTMLDivElement>) => {}, []);\r\n  const onFix = useCallback((e: React.MouseEvent<HTMLDivElement>) => {}, []);\r\n\r\n  const myCommentButtonsJSX = useMemo(\r\n    () =>\r\n      isMyComment && (\r\n        <Fragment>\r\n          <Button\r\n            btnSize={EButtonSize.Small}\r\n            btnType={EButtonType.Alt}\r\n            onClick={onFix}\r\n          >\r\n            Fix\r\n          </Button>\r\n          <Button\r\n            btnSize={EButtonSize.Small}\r\n            btnType={EButtonType.Alt}\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Fragment>\r\n      ),\r\n    [isMyComment]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {thumbnailJSX}\r\n      {nameJSX}\r\n      {contentsJSX}\r\n      {myCommentButtonsJSX}\r\n      {createdAtJSX}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtherComment;\r\n","import React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { TCombinedStates } from \"~/src/store\";\r\nimport { initFetch_QueryAllComments } from \"~/src/store/action/comment-async\";\r\nimport { ICommentData } from \"~/src/typings\";\r\nimport NewComment from \"./NewComment\";\r\nimport OtherComment from \"./OtherComment\";\r\n\r\ninterface ICommentsProps {\r\n  lectureID: number;\r\n}\r\n\r\nconst Comments: React.FC<ICommentsProps> = ({ lectureID }) => {\r\n  initComments(lectureID);\r\n\r\n  const user = useSelector((state: TCombinedStates) => state.user.user);\r\n\r\n  const myComments = useSelector(\r\n    (state: TCombinedStates) => state.userAsync_QueryAllMyComments.comments\r\n  );\r\n  const otherComments = useSelector(\r\n    (state: TCombinedStates) => state.commentAsync_QueryAllComments.comments\r\n  );\r\n\r\n  const myUserID = sessionStorage.getItem(\"userID\");\r\n\r\n  // TODO: 1. New Comment\r\n  const newCommentJSX: JSX.Element = useMemo(\r\n    () => <NewComment myUserID={myUserID!} />,\r\n    [myUserID]\r\n  );\r\n\r\n  // TODO: 2. My Comments\r\n  const myCommentsJSX: JSX.Element[] | null = useMemo(\r\n    () =>\r\n      myComments &&\r\n      user &&\r\n      new Array(myComments.length)\r\n        .fill(0)\r\n        .map((comment: ICommentData) => (\r\n          <OtherComment key={comment.commentID} comment={comment} isMyComment />\r\n        )),\r\n    [user, myComments]\r\n  );\r\n\r\n  // TODO: 3. Other Comments belong to this lecture\r\n  const otherCommentsJSX: JSX.Element[] | null = useMemo(\r\n    () =>\r\n      otherComments &&\r\n      user &&\r\n      new Array(otherComments.length)\r\n        .fill(0)\r\n        .map((comment: ICommentData) => (\r\n          <OtherComment\r\n            key={comment.commentID}\r\n            comment={comment}\r\n            isMyComment={false}\r\n          />\r\n        )),\r\n    [user, otherComments]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {newCommentJSX}\r\n      {myCommentsJSX}\r\n      {otherCommentsJSX}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst initComments = (lectureID: number) => {\r\n  const dispatch = useDispatch();\r\n  const _queryAllComments = useCallback(\r\n    () => dispatch(initFetch_QueryAllComments(lectureID)),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    _queryAllComments();\r\n  }, [lectureID]);\r\n};\r\n\r\nexport default Comments;\r\n","import React, { Fragment } from \"react\";\r\nimport Backdrop from \"../backdrop/Backdrop\";\r\nimport Comments from \"../comment/Comments\";\r\n\r\nimport \"./_LecturePopup.scss\";\r\n\r\ninterface ILecturePopupProps {\r\n  lectureID: number;\r\n  children: JSX.Element;\r\n  onClose: () => void;\r\n}\r\n\r\nconst LecturePopup: React.FC<ILecturePopupProps> = ({\r\n  lectureID,\r\n  children,\r\n  onClose,\r\n}) => {\r\n  console.log(\"lecture ID\", lectureID);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Backdrop isUsed={true} onClose={onClose}/>\r\n      <div className=\"lecturePopup\">\r\n        <div className=\"lecturePopup--lecture\">{children}</div>\r\n        <Comments lectureID={lectureID} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LecturePopup;\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getIcon } from \"~/src/common\";\r\nimport {\r\n  initFetch_AddBookmark,\r\n  initFetch_RemoveBookmark,\r\n} from \"~/src/store/action/bookmark-async\";\r\n\r\nimport \"./_LectureBookmark.scss\";\r\n\r\nconst LectureBookmark = () => {\r\n  const { BookmarkIcon_Disabled, BookmarkIcon_Enabled } = makeBookmarkIcon();\r\n\r\n  return <div className=\"lectureCard--bookmark\">{BookmarkIcon_Disabled}</div>;\r\n};\r\n\r\nconst makeBookmarkIcon = () => {\r\n  const [isBookmarkEnabled, setIsBookmarkEnabled] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const userID = localStorage.getItem(\"userID\");\r\n  if (!userID || userID === \"\") {\r\n    // console.error(\"userID is invalid!\");\r\n  }\r\n\r\n  // const _addBookmark = useCallback(() => dispatch(initFetch_AddBookmark()), []);\r\n  // const _removeBookmark = useCallback(\r\n  //   () => dispatch(initFetch_RemoveBookmark()),\r\n  //   []\r\n  // );\r\n\r\n  const onClickBookmarkIcon = useCallback(() => {\r\n    if (isBookmarkEnabled) {\r\n    } else {\r\n    }\r\n    setIsBookmarkEnabled(prv => !prv);\r\n  }, [isBookmarkEnabled, setIsBookmarkEnabled]);\r\n\r\n  const BookmarkIcon_Disabled = useMemo(\r\n    () => getIcon(\"BookmarkIcon_Disabled\", onClickBookmarkIcon),\r\n    [onClickBookmarkIcon]\r\n  );\r\n\r\n  const BookmarkIcon_Enabled = useMemo(\r\n    () => getIcon(\"BookmarkIcon_Enabled\", onClickBookmarkIcon),\r\n    [onClickBookmarkIcon]\r\n  );\r\n\r\n  return {\r\n    BookmarkIcon_Enabled,\r\n    BookmarkIcon_Disabled,\r\n  };\r\n};\r\n\r\nexport default LectureBookmark;\r\n","import React from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LecturePlatform.scss\";\r\n\r\ninterface ILecturePlatformProps {\r\n  platform: string;\r\n}\r\n\r\nconst LecturePlatform: React.FC<ILecturePlatformProps> = ({ platform }) => {\r\n  const platformIcon = getIcon(\"Globe\", undefined, { marginRight: \"10px\" });\r\n  return (\r\n    <div className=\"lectureCard--platform\">\r\n      {platformIcon}\r\n      {platform}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LecturePlatform;\r\n","import React from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\nimport { TCurrency } from \"~/src/typings\";\r\n\r\nimport \"./_LecturePrice.scss\";\r\n\r\ninterface ILecturePriceProps {\r\n  price: number;\r\n  currency: TCurrency;\r\n}\r\n\r\nconst LecturePrice: React.FC<ILecturePriceProps> = ({ price, currency }) => {\r\n  let currencyID: string = \"\";\r\n  let finalPrice: number | string;\r\n  switch (currency) {\r\n    case \"$\":\r\n      currencyID = \"Dollar-Sign\";\r\n      // 3 단위 ,\r\n      finalPrice = price === 0 ? \"무료\" : price;\r\n      break;\r\n\r\n    case \"₩\":\r\n    case \"￦\":\r\n    default:\r\n      currencyID = \"Won-Sign\";\r\n      //  3 단위 ,\r\n      finalPrice = price === 0 ? \"무료\" : `${price} 원`;\r\n      break;\r\n  }\r\n  const priceIcon = getIcon(currencyID, undefined, { marginRight: \"10px\" });\r\n  return (\r\n    <div className=\"lectureCard--price\">\r\n      {priceIcon}\r\n      {finalPrice}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LecturePrice;\r\n","import React from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LectureRating.scss\";\r\n\r\ninterface ILectureRatingProps {\r\n  rating: number;\r\n}\r\n\r\nconst LectureRating: React.FC<ILectureRatingProps> = ({ rating }) => {\r\n  const ratingIcon = getIcon(\"Star\", undefined, { marginRight: \"10px\" });\r\n  return (\r\n    <div className=\"lectureCard--rating\">\r\n      {ratingIcon}\r\n      <p>{rating.toFixed(1)} / 5.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureRating;\r\n","import React, { useMemo } from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LectureSessionCount.scss\";\r\n\r\ninterface ILectureSessionCountProps {\r\n  sessionCount: number;\r\n}\r\n\r\nconst LectureSessionCount: React.FC<ILectureSessionCountProps> = ({\r\n  sessionCount,\r\n}) => {\r\n  const sessionCountIcon = getIcon(\"Lectures\", undefined, {\r\n    marginRight: \"10px\",\r\n  });\r\n  const actualSessionCount = useMemo(\r\n    () => (sessionCount === 1 ? \"단일 강좌\" : `${sessionCount} 개`),\r\n    [sessionCount]\r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      {sessionCountIcon}\r\n      {actualSessionCount}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureSessionCount;\r\n","import React from \"react\";\r\n\r\nimport \"./_LectureThumbnail.scss\";\r\n\r\ninterface ILectureThumbnailProps {\r\n  imageURL: string;\r\n  title: string;\r\n  isCard: boolean;\r\n}\r\n\r\nconst LectureThumbnail: React.FC<ILectureThumbnailProps> = ({\r\n  imageURL,\r\n  title,\r\n  isCard = true,\r\n}) => (\r\n  <img\r\n    src={imageURL}\r\n    alt={`thumbnail--${title}`}\r\n    loading=\"lazy\"\r\n    className={isCard ? \"lectureCard--thumbnail\" : \"lecturePopup--thumbnail\"}\r\n  />\r\n);\r\n\r\nexport default LectureThumbnail;\r\n","import React from \"react\";\r\n\r\nimport \"./_LectureTitle.scss\";\r\n\r\ninterface ILectureTitleProps {\r\n  title: string;\r\n  isCard: boolean;\r\n}\r\n\r\nconst LectureTitle: React.FC<ILectureTitleProps> = ({ title, isCard = true }) => (\r\n  <div className={isCard ? \"lectureCard--title\" : \"lecturePopup--title\"}>{title}</div>\r\n);\r\n\r\nexport default LectureTitle;\r\n","import React from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LectureViewCount.scss\";\r\n\r\ninterface ILectureViewCountProps {\r\n  viewCount: number;\r\n}\r\n\r\nconst LectureViewCount: React.FC<ILectureViewCountProps> = ({ viewCount }) => {\r\n  const viewCountIcon = getIcon(\"Users\", undefined, { marginRight: \"10px\" });\r\n  return (\r\n    <div>\r\n      {viewCountIcon}\r\n      {viewCount} 명\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureViewCount;\r\n","import React, { useMemo } from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LectureSkills.scss\";\r\n\r\ninterface ILectureSkillsProps {\r\n  skills: string;\r\n}\r\n\r\nconst LectureSkills: React.FC<ILectureSkillsProps> = ({ skills }) => {\r\n  const eachSkills: JSX.Element[] = useMemo(\r\n    () =>\r\n      skills\r\n        ?.split(\",\")\r\n        .map((skill: string) => `${skill} `)\r\n        .map(skill => <li>{skill}</li>),\r\n    [skills]\r\n  );\r\n  const skillIcon = getIcon(\"Language\", undefined, { marginRight: \"10px\" });\r\n\r\n  return (\r\n    <div className=\"lectureCard--skills\">\r\n      {skillIcon}\r\n      <div className=\"lectureCard--skills-each\">{eachSkills}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureSkills;\r\n","import React from \"react\";\r\n\r\nimport \"./_LectureDescription.scss\";\r\n\r\ninterface ILectureDescriptionProps {\r\n  description: string;\r\n}\r\n\r\nconst LectureDescription: React.FC<ILectureDescriptionProps> = ({\r\n  description,\r\n}) => {\r\n  return <div className=\"lectureCard--description\">{description}</div>;\r\n};\r\n\r\nexport default LectureDescription;\r\n","import React, { useMemo } from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_LectureLanguage.scss\";\r\n\r\ninterface ILectureLanguageProps {\r\n  language: string;\r\n}\r\n\r\nconst LectureLanguage: React.FC<ILectureLanguageProps> = ({ language }) => {\r\n  const languageIcon = useMemo(\r\n    () => getIcon(\"Language\", undefined, { marginRight: \"10px\" }),\r\n    []\r\n  );\r\n  return (\r\n    <div className=\"lectureCard--language\">\r\n      {languageIcon}\r\n      {language}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LectureLanguage;\r\n","import React from \"react\";\r\n\r\nimport \"./_LectureInstructor.scss\";\r\n\r\ninterface ILectureInstructorProps {\r\n  instructor: string;\r\n}\r\n\r\nconst LectureInstructor: React.FC<ILectureInstructorProps> = ({\r\n  instructor,\r\n}) => <div className=\"lecturePopup--instructor\">{instructor}</div>;\r\n\r\nexport default LectureInstructor;\r\n","import React from \"react\";\r\n\r\nimport \"./_LectureGoToLecture.scss\";\r\n\r\ninterface ILectureGoToLectureProps {\r\n  link: string;\r\n}\r\n\r\nconst LectureGoToLecture: React.FC<ILectureGoToLectureProps> = ({ link }) => (\r\n  <a href={link} className=\"lecturePopup--goto-lecture\" target=\"_blank\">\r\n    강좌 바로가기\r\n  </a>\r\n);\r\n\r\nexport default LectureGoToLecture;\r\n","import React, { Fragment, useCallback, useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"~/src/store\";\r\nimport { ESeparatorDirection } from \"~/src/typings\";\r\nimport LecturePopup from \"../lecture-popup/LecturePopup\";\r\nimport Separator from \"../separator/Separator\";\r\n\r\nimport {\r\n  LectureTitle,\r\n  LectureBookmark,\r\n  LectureThumbnail,\r\n  LectureRating,\r\n  LectureViewCount,\r\n  LecturePrice,\r\n  LecturePlatform,\r\n  LectureSessionCount,\r\n  LectureLanguage,\r\n  LectureDescription,\r\n  LectureInstructor,\r\n} from \"./\";\r\nimport LectureGoToLecture from \"./lecture-card-element/goToLecture/LectureGoToLecture\";\r\n\r\nimport \"./_LectureCard.scss\";\r\n\r\nexport interface IGridLectureCardProps {\r\n  lectureIdx: number;\r\n}\r\n\r\nconst GridLectureCard: React.FC<IGridLectureCardProps> = ({ lectureIdx }) => {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n  \r\n  const lecture = useSelector(\r\n    (state: TCombinedStates) => state.searchResult.lectures[lectureIdx]\r\n  );\r\n\r\n  const {\r\n    id,\r\n    imageUrl,\r\n    title,\r\n    price,\r\n    salePrices,\r\n    rating,\r\n    instructor,\r\n    url,\r\n    viewCount,\r\n    platform,\r\n    sessionCount,\r\n    currency,\r\n    description,\r\n  } = lecture!;\r\n\r\n  const language = currency === \"$\" ? \"EN\" : \"KR\";\r\n\r\n  const actualPrice =\r\n    salePrices === 0 || salePrices === undefined ? price : salePrices;\r\n\r\n  const openPopup = useCallback(() => setIsOpened(true), []);\r\n\r\n  const closePopup = useCallback(() => setIsOpened(false), []);\r\n\r\n  const lectureCardInfoJSX = useMemo(\r\n    () => (\r\n      <div onClick={openPopup}>\r\n        <LectureTitle title={title} isCard />\r\n        <LectureBookmark />\r\n        <LectureThumbnail imageURL={imageUrl} title={title} isCard />\r\n        <div className=\"lectureCard-grid-desc\">\r\n          <div className=\"lectureCard-grid--first-row\">\r\n            <div className=\"lectureCard-grid--cl1\">\r\n              <LectureRating rating={rating} />\r\n              <LecturePlatform platform={platform} />\r\n            </div>\r\n            <div className=\"lectureCard-grid--cl2\">\r\n              <LectureViewCount viewCount={viewCount} />\r\n              <LectureSessionCount sessionCount={sessionCount} />\r\n            </div>\r\n            <div className=\"lectureCard-grid-cl3\">\r\n              <LecturePrice price={actualPrice} currency={currency} />\r\n              <LectureLanguage language={language} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ),\r\n    [\r\n      imageUrl,\r\n      title,\r\n      rating,\r\n      platform,\r\n      viewCount,\r\n      sessionCount,\r\n      actualPrice,\r\n      currency,\r\n      language,\r\n    ]\r\n  );\r\n\r\n  const lecturePopupInfoJSX = useMemo(\r\n    () => (\r\n      <Fragment>\r\n        <LectureBookmark />\r\n        <LectureThumbnail imageURL={imageUrl} title={title} isCard={false} />\r\n        <div className=\"lecturePopup-close\" onClick={closePopup}>\r\n          X\r\n        </div>\r\n        <div className=\"lectureCard-separator\"></div>\r\n        <div className=\"lectureCard-grid-desc\">\r\n          <div className=\"lectureCard-grid--first-row\">\r\n            <div className=\"lectureCard-grid--cl1\">\r\n              <LectureRating rating={rating} />\r\n              <LecturePlatform platform={platform} />\r\n            </div>\r\n            <div className=\"lectureCard-grid--cl2\">\r\n              <LectureViewCount viewCount={viewCount} />\r\n              <LectureSessionCount sessionCount={sessionCount} />\r\n            </div>\r\n            <div className=\"lectureCard-grid-cl3\">\r\n              <LecturePrice price={actualPrice} currency={currency} />\r\n              <LectureLanguage language={language} />\r\n            </div>\r\n          </div>\r\n          <div className=\"lectureCard-separator\"></div>\r\n          <LectureTitle title={title} isCard={false} />\r\n          <LectureGoToLecture link={url} />\r\n          <LectureInstructor instructor={instructor} />\r\n          <LectureDescription description={description} />\r\n        </div>\r\n      </Fragment>\r\n    ),\r\n    [\r\n      imageUrl,\r\n      title,\r\n      rating,\r\n      platform,\r\n      viewCount,\r\n      sessionCount,\r\n      actualPrice,\r\n      currency,\r\n      language,\r\n    ]\r\n  );\r\n\r\n  const popupJSX = useMemo(\r\n    () =>\r\n      isOpened ? (\r\n        <LecturePopup lectureID={id} onClose={closePopup}>\r\n          {lecturePopupInfoJSX}\r\n        </LecturePopup>\r\n      ) : null,\r\n    [isOpened, lecturePopupInfoJSX, id]\r\n  );\r\n\r\n  return (\r\n    <li className=\"lectureCard-grid\">\r\n      {popupJSX}\r\n      {lectureCardInfoJSX}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default GridLectureCard;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_MoveToNextPage.scss\";\r\n\r\ninterface IMoveToNextPageProps {\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n  disable: boolean;\r\n}\r\n\r\nconst MoveToNextPage: React.FC<IMoveToNextPageProps> = ({\r\n  onClick,\r\n  disable = false,\r\n}) => {\r\n  const icon = getIcon(\"Right-Arrow\", onClick, { fontSize: \"5rem\" });\r\n  const iconRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!iconRef.current) return;\r\n\r\n    if (disable) {\r\n      iconRef.current.style.color = \"rgba(100, 100, 100, 0.2)\";\r\n    } else {\r\n      iconRef.current.style.color = \"rgba(100, 100, 100, 1)\";\r\n    }\r\n  }, [disable]);\r\n\r\n  return (\r\n    <div className=\"moveToNextPage\" ref={iconRef}>\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveToNextPage;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { getIcon } from \"~/src/common\";\r\n\r\nimport \"./_MoveToPreviousPage.scss\";\r\n\r\ninterface IMoveToPreviousPageProps {\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n  disable: boolean;\r\n}\r\n\r\nconst MoveToPreviousPage: React.FC<IMoveToPreviousPageProps> = ({\r\n  onClick,\r\n  disable = false,\r\n}) => {\r\n  const icon = getIcon(\"Left-Arrow\", onClick, { fontSize: \"5rem\" });\r\n  const iconRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!iconRef.current) return;\r\n\r\n    if (disable) {\r\n      iconRef.current.style.color = \"rgba(100, 100, 100, 0.2)\";\r\n    } else {\r\n      iconRef.current.style.color = \"rgba(100, 100, 100, 1)\";\r\n    }\r\n  }, [disable]);\r\n\r\n  return (\r\n    <div className=\"moveToPreviousPage\" ref={iconRef}>\r\n      {icon}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveToPreviousPage;\r\n","import React, {\r\n  Fragment,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport MoveToNextPage from \"../moveToPage/MoveToNextPage\";\r\nimport MoveToPreviousPage from \"../moveToPage/MoveToPreviousPage\";\r\n\r\nimport \"./_Pagenator.scss\";\r\n\r\ninterface IPagenatorProps {\r\n  postsPerPage: number;\r\n  children: JSX.Element[];\r\n}\r\n\r\nconst Pagenator: React.FC<IPagenatorProps> = ({ postsPerPage, children }) => {\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [totalPage, setTotalPage] = useState<number>(0);\r\n  const [pagedPosts, setPagedPosts] = useState<JSX.Element[]>();\r\n\r\n  // calc total pages - calculated at first only once\r\n  useEffect(() => {\r\n    if (postsPerPage <= 0) {\r\n      throw new Error(\"Posts per page can't be below 0\");\r\n    }\r\n    const totalP = Math.floor(children.length / postsPerPage);\r\n    setTotalPage(totalP - 1);\r\n  }, []);\r\n\r\n  // calc lectures arrays\r\n  // e.g. postPerPage: 9\r\n  // -> 0 ~ 8 / 9 ~ 17 / 18 ~ 27 / 28 ~ 37\r\n  useEffect(\r\n    () =>\r\n      setPagedPosts(\r\n        children.slice(\r\n          currentPage * postsPerPage,\r\n          (currentPage + 1) * postsPerPage\r\n        )\r\n      ),\r\n    [currentPage, postsPerPage]\r\n  );\r\n\r\n  const {\r\n    onClick: onMoveToNextPage,\r\n    isDisabled: isMoveToNextPageDisabled,\r\n  } = useMoveToNextPage(currentPage, totalPage, setCurrentPage);\r\n\r\n  const {\r\n    onClick: onMoveToPrevPage,\r\n    isDisabled: isMoveToPrevPageDisabled,\r\n  } = useMoveToPreviousPage(currentPage, setCurrentPage);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MoveToPreviousPage\r\n        onClick={onMoveToPrevPage}\r\n        disable={isMoveToPrevPageDisabled}\r\n      />\r\n      <MoveToNextPage\r\n        onClick={onMoveToNextPage}\r\n        disable={isMoveToNextPageDisabled}\r\n      />\r\n      {pagedPosts}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst useMoveToPreviousPage = (\r\n  currentPage: number,\r\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const onClick = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      if (currentPage === 0) {\r\n        return;\r\n      }\r\n      setCurrentPage(prv => prv - 1);\r\n    },\r\n    [currentPage]\r\n  );\r\n\r\n  const isDisabled = useMemo(() => currentPage === 0, [currentPage]);\r\n\r\n  return { onClick, isDisabled };\r\n};\r\n\r\nconst useMoveToNextPage = (\r\n  currentPage: number,\r\n  totalPage: number,\r\n  setCurrentPage: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const onClick = useCallback(\r\n    (e: React.MouseEvent<HTMLElement>) => {\r\n      if (currentPage >= totalPage - 1) {\r\n        return;\r\n      }\r\n      setCurrentPage(prv => prv + 1);\r\n    },\r\n    [currentPage, totalPage]\r\n  );\r\n\r\n  const isDisabled = useMemo(() => currentPage >= totalPage - 1, [\r\n    currentPage,\r\n    totalPage,\r\n  ]);\r\n\r\n  return { onClick, isDisabled };\r\n};\r\n\r\nexport default Pagenator;\r\n","import React, { useMemo } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"~/src/store\";\r\n\r\nimport GridLectureCard from \"~/src/component/lecture-card/GridLectureCard\";\r\nimport Pagenator from \"~/src/component/pagenator/Pagenator\";\r\n\r\nimport \"./_GridView.scss\";\r\n\r\nexport interface IGridViewProps {}\r\n\r\nconst GridView: React.FC<IGridViewProps> = () => {\r\n  const searchedLecturesLen: number = useSelector(\r\n    (state: TCombinedStates) => state.searchResult.lectures.length,\r\n    shallowEqual\r\n  );\r\n\r\n  // TODO: Pagenation\r\n  const lectureCardsJSX = useMemo(\r\n    () =>\r\n      new Array(searchedLecturesLen)\r\n        .fill(0)\r\n        .map((_, i: number) => <GridLectureCard key={i} lectureIdx={i} />),\r\n    [searchedLecturesLen]\r\n  );\r\n\r\n  return (\r\n    <ul className=\"gridView\">\r\n      <Pagenator postsPerPage={9}>{lectureCardsJSX}</Pagenator>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default GridView;\r\n","import React, { Fragment, useCallback, useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { TCombinedStates } from \"../../../store\";\r\n\r\nimport { initFetch_QueryAllBookmarks } from \"~/src/store/action/bookmark-async/query-all-bookmarks/ActionCreators\";\r\n\r\nimport GridView from \"./view/GridView\";\r\nimport ListView from \"./view/ListView\";\r\n\r\nimport \"./_SearchResult.scss\";\r\n\r\nconst SearchResult = () => {\r\n  const isSearchSucceed = useSelector(\r\n    (state: TCombinedStates) => state.searchResult.isSearchSucceed,\r\n    shallowEqual\r\n  );\r\n\r\n  const isGridView = useSelector(\r\n    (state: TCombinedStates) => state.searchResult.isGridView,\r\n    shallowEqual\r\n  );\r\n\r\n  fetchBookmarks();\r\n\r\n  return (\r\n    <div className=\"searchResult\">\r\n      {\r\n        isSearchSucceed ? isGridView ? <GridView /> : null : null\r\n        // TODO: List View!\r\n        // <ListView />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst fetchBookmarks = () => {\r\n  const dispatch = useDispatch();\r\n  const _initFetchBookmarks = useCallback(\r\n    (userID: string) => dispatch(initFetch_QueryAllBookmarks(userID)),\r\n    []\r\n  );\r\n\r\n  const userID = localStorage.getItem(\"userID\");\r\n  if (!userID || userID === \"\") {\r\n    // throw new Error(\"userID is invalid!\");\r\n    return;\r\n  }\r\n\r\n  // fetch all my bookmarks at first!\r\n  useEffect(() => {\r\n    _initFetchBookmarks(userID);\r\n  }, []);\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { EMenuMode, ENavType } from \"../../typings\";\r\nimport { initFetch_CarouselImageURLs } from \"../../store/action/carousel-async/\";\r\n\r\nimport NavFactory from \"../../component/nav/nav-factory/NavFactory\";\r\n\r\nimport ImageCarousel from \"./image-carousel/ImageCarousel\";\r\nimport Search from \"./search/Search\";\r\nimport KeywordSelectorCtrl from \"./search/keyword-selector/KeywordSelectorCtrl\";\r\nimport SearchResultSummary from \"./search-result/SearchResultSummary\";\r\nimport SearchResult from \"./search-result/SearchResult\";\r\nimport GoToTop from \"~/src/component/goToTop/GoToTop\";\r\nimport Menu from \"~/src/component/menu/Menu\";\r\nimport { placeIconsRandomly } from \"../../common/\";\r\nimport Footer from \"../../component/footer/Footer\";\r\n\r\nimport \"./_Main.scss\";\r\n\r\nconst Main: React.FC<{}> = () => {\r\n  useInitFetch();\r\n\r\n  return (\r\n    <div>\r\n      <NavFactory navType={ENavType.AfterLogin} highlightBtnIdx={0} />\r\n      <div className=\"page main\">\r\n        <ImageCarousel />\r\n        <Search />\r\n        <KeywordSelectorCtrl />\r\n        <SearchResultSummary />\r\n        <SearchResult />\r\n        <GoToTop />\r\n        <Menu menuMode={EMenuMode.AfterLogin} />\r\n        {placeIconsRandomly(30, { fontSize: \"2rem\" })}\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useInitFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const _initFetchRandomCarouselImages = useCallback(\r\n    (query: string) => dispatch(initFetch_CarouselImageURLs({ query })),\r\n    []\r\n  );\r\n\r\n  // TODO: Fetch Random Images times passing by\r\n  useEffect(() => {\r\n    _initFetchRandomCarouselImages(\"office\");\r\n  }, []);\r\n};\r\n\r\nexport default Main;\r\n"],"names":["$e7058d982c43d83e403e578826cac116$var$PARAM_REGEXP","$e7058d982c43d83e403e578826cac116$var$QESC_REGEXP","$e7058d982c43d83e403e578826cac116$var$TYPE_REGEXP","string","TypeError","header","obj","getHeader","headers","$e7058d982c43d83e403e578826cac116$var$getcontenttype","index","indexOf","type","substr","trim","test","$e7058d982c43d83e403e578826cac116$var$ContentType","toLowerCase","key","match","value","lastIndex","exec","length","replace","parameters","this","Object","create","$d7244331010b926b272f7aac965f8190$var$_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","$d7244331010b926b272f7aac965f8190$var$_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","$d7244331010b926b272f7aac965f8190$var$checkIsString","$d7244331010b926b272f7aac965f8190$var$getRefinement","$d7244331010b926b272f7aac965f8190$var$isDefined","x","getB","a","$d7244331010b926b272f7aac965f8190$var$compactDefined","reduce","acc","_ref","$d7244331010b926b272f7aac965f8190$var$flow","_len","fns","Array","_key","len","_len2","_key2","y","$d7244331010b926b272f7aac965f8190$export$Language","Language","$d7244331010b926b272f7aac965f8190$export$OrderBy","OrderBy","$d7244331010b926b272f7aac965f8190$var$checkIsObject","response","isArray","$d7244331010b926b272f7aac965f8190$var$checkIsErrors","errors","every","$d7244331010b926b272f7aac965f8190$var$checkIsApiError","$d7244331010b926b272f7aac965f8190$var$DecodingError","message","$d7244331010b926b272f7aac965f8190$var$getJsonResponse","contentTypeHeader","get","$d7244331010b926b272f7aac965f8190$var$checkIsJsonResponse","json","_err","$d7244331010b926b272f7aac965f8190$var$handleFetchResponse","handleResponse","ok","then","handledResponse","status","jsonResponse","$d7244331010b926b272f7aac965f8190$var$getErrorForBadStatusCode","error","$d7244331010b926b272f7aac965f8190$var$castResponse","$d7244331010b926b272f7aac965f8190$var$buildUrl","pathname","query","apiUrl","url","URL","$d7244331010b926b272f7aac965f8190$var$addPathnameToUrl","forEach","queryKey","searchParams","set","toString","$d7244331010b926b272f7aac965f8190$var$addQueryToUrl","$d7244331010b926b272f7aac965f8190$var$createRequestHandler","fn","additionalFetchOptions","_fn","$d7244331010b926b272f7aac965f8190$var$createRequestGenerator","handlers","$d7244331010b926b272f7aac965f8190$var$initMakeRequest","accessKey","_ref$apiVersion","apiVersion","_ref$apiUrl","generalHeaders","providedFetch","fetch","generalFetchOptions","_ref2","handleRequest","_ref3","_ref3$method","method","endpointHeaders","body","signal","fetchOptions","Accept-Version","Authorization","$d7244331010b926b272f7aac965f8190$var$getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","$d7244331010b926b272f7aac965f8190$var$handleFeedResponse","results","$d7244331010b926b272f7aac965f8190$var$getCollections","collectionIds","collections","join","$d7244331010b926b272f7aac965f8190$var$getFeedParams","page","perPage","orderBy","per_page","order_by","$d7244331010b926b272f7aac965f8190$var$getPhotos","collectionId","orientation","paginationParams","$d7244331010b926b272f7aac965f8190$var$COLLECTIONS_PATH_PREFIX","$d7244331010b926b272f7aac965f8190$var$get","$d7244331010b926b272f7aac965f8190$var$list","$d7244331010b926b272f7aac965f8190$var$getRelated","$d7244331010b926b272f7aac965f8190$var$list$1","feedParams","$d7244331010b926b272f7aac965f8190$var$get$1","$d7244331010b926b272f7aac965f8190$var$PHOTOS_PATH_PREFIX","photoId","$d7244331010b926b272f7aac965f8190$var$getStats","$d7244331010b926b272f7aac965f8190$var$getRandom","_temp","contentFilter","queryParams","content_filter","cache-control","$d7244331010b926b272f7aac965f8190$var$trackDownload","_ref4","_parseQueryAndPathnam","_URL","undefined","$d7244331010b926b272f7aac965f8190$var$parseQueryAndPathname","downloadLocation","Error","$d7244331010b926b272f7aac965f8190$var$getPhotos$1","lang","filters","$d7244331010b926b272f7aac965f8190$var$SEARCH_PATH_PREFIX","$d7244331010b926b272f7aac965f8190$var$getCollections$1","$d7244331010b926b272f7aac965f8190$var$getUsers","$d7244331010b926b272f7aac965f8190$var$get$2","$d7244331010b926b272f7aac965f8190$var$USERS_PATH_PREFIX","username","$d7244331010b926b272f7aac965f8190$var$getPhotos$2","stats","$d7244331010b926b272f7aac965f8190$var$getLikes","$d7244331010b926b272f7aac965f8190$var$getCollections$2","$d7244331010b926b272f7aac965f8190$var$getTopicPath","$d7244331010b926b272f7aac965f8190$var$BASE_TOPIC_PATH","topicIdOrSlug","$d7244331010b926b272f7aac965f8190$var$getTopicPhotosPath","topicPath","$d7244331010b926b272f7aac965f8190$var$list$2","topicIdsOrSlugs","ids","$d7244331010b926b272f7aac965f8190$var$get$3","$d7244331010b926b272f7aac965f8190$var$getPhotos$3","$dae9e2327c7eadb6687317e60880dfb3$var$unsplash","makeRequest","photos","list","getStats","getRandom","trackDownload","users","getPhotos","getCollections","getLikes","search","getUsers","getRelated","topics","$dae9e2327c7eadb6687317e60880dfb3$var$get_PhotoPages","_callee","queries","data","$9a615bc252db6008060996bf45f4d1e0$var$fetchRequest_CarouselImageURLs","FetchRequest_CarouselImagesURLs","$9a615bc252db6008060996bf45f4d1e0$var$fetchSucceed_CarouselImageURLs","urls","FetchSucceed_CarouselImagesURLs","$9a615bc252db6008060996bf45f4d1e0$var$fetchFail_CarouselImageURLs","err","FetchFail_CarouselImagesURLs","dispatch","map","el","regular","$646db0973566c1ea01ce734e86da4c02$var$getRandomValues","crypto","getRandomValues","bind","msCrypto","window","$646db0973566c1ea01ce734e86da4c02$var$rnds8","Uint8Array","$646db0973566c1ea01ce734e86da4c02$var$rnds","r","Math","random","$016015b7b9c4a9634b8332aa87e88730$var$rng","$974861ac1fbb53048200de299f86ef95$var$byteToHex","$974861ac1fbb53048200de299f86ef95$var$i","$016015b7b9c4a9634b8332aa87e88730$var$_nodeId","$016015b7b9c4a9634b8332aa87e88730$var$_clockseq","$016015b7b9c4a9634b8332aa87e88730$var$bytesToUuid","buf","offset","bth","$016015b7b9c4a9634b8332aa87e88730$var$_lastMSecs","$016015b7b9c4a9634b8332aa87e88730$var$_lastNSecs","$14764bbe5de5d801f005ac31f3de907e$var$v1","options","b","node","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","tl","tmh","n","$e5ab4611d30ceaba228669a193726c19$var$rng","$e5ab4611d30ceaba228669a193726c19$var$bytesToUuid","$14764bbe5de5d801f005ac31f3de907e$var$v4","rnds","rng","ii","$14764bbe5de5d801f005ac31f3de907e$var$uuid","v1","v4","idx","Set_ImageIndicatorCurIdx","ref","Set_ImagePlacerRef","imgWidth","Set_ImageWidth","$40873aae9ef85263d4e065388cee7616$var$useMoveCarousel","direction","placerEl","state","carousel","imgLen","carouselAsync","curIdx","_setImageIndicatorCurIdx","_","current","style","transform","onMoveToLeft","onMoveToRight","className","onClick","indicatorJSX","fill","$06472d06f68eedc344d54686bc16b567$var$useImg","imgs","_setImgWidth","imgTmpRef","timerHandle","setTimeout","clientWidth","clearTimeout","src","concat","$06472d06f68eedc344d54686bc16b567$var$useImgRef","imgRef","_setImgRef","setImgRef","imgJSX","$4ff2cca66c185c4a24dc90773a10adf2$var$get_AllLectures","$6c62ddf7d6407bfa202eed6ae328a7c0$var$fetchRequest_RetrieveLectures","FetchRequest_RetrieveLectures","$6c62ddf7d6407bfa202eed6ae328a7c0$var$fetchSucceed_RetrieveLectures","lectures","FetchSucceed_RetrieveLectures","$6c62ddf7d6407bfa202eed6ae328a7c0$var$fetchFail_RetrieveLectures","errCode","FetchFail_RetrieveLectures","_status","Toggle_SearchBar","Open_SearchBar","Close_SearchBar","input","Set_CurrentInput","Toggle_InvalidKeyword_WarningRef","selectedKeyword","Set_SelectedKeyword","selectedPlatform","Set_SelectedPlatform","Clear_SelectedAll","suggestions","Set_Suggestion","Clear_Suggestion","searchBar","searchSuggestion","_setSelectedKeyword","keyword","clearCurrentInput","_clearSuggestion","_toggleInvalidKeywordWarning","onClickAddButton","includes","btnSize","Small","btnType","Primary","additionalClassName","$824b1d2c031ddf53f25fdc43474ba012$var$startSearch","Start_Search","$824b1d2c031ddf53f25fdc43474ba012$var$succeedSearch","Succeed_Search","$824b1d2c031ddf53f25fdc43474ba012$var$failSearch","Fail_Search","Toggle_ResultView","targetPlatforms","targetKeywords","lecturesQueriedByTargetPlatforms","filter","lecture","platform","console","log","lecturesQueriedByTargetKeywords","skills","split","skill","$2539e695503e5d68963fce57f4783000$var$useOnClickSearchBtn","selectedKeywords","selectedPlatforms","searchAsync","_initSearch","onClickSearchBtn","XSmall","additionalStyles","fontSize","_clearAll","onClickClearButton","$a7e1d4b524c553b0c8422b274e8b1257$var$platformsKorean","Set","from","$a7e1d4b524c553b0c8422b274e8b1257$var$platformsEnglish","$a7e1d4b524c553b0c8422b274e8b1257$var$keywordsKorean","$a7e1d4b524c553b0c8422b274e8b1257$var$keywordsEnglish","$8e751cd8238e3bc79b7f0acba95d3a11$var$koreanCheckReg","nextInputAwaitTimer","_setSuggestion","suggestion","_setInput","e","$8e751cd8238e3bc79b7f0acba95d3a11$var$suggest","keywords","onSearchBarInputChange","suggestionJSX","removeKeyword","onClickSelectedKeyword","innerText","removePlatform","onClickSelectedPlatform","isSearchBarClosed","isSearchBarClose","_toggleSearchBar","_openSearchBar","_closeSearchBar","onSubmitInput","placeholder","onChange","onKeyPress","searchIcon","selectedPlatformsJSX","selectedKeywordsJSX","toggleSearchBar","invalidKeywordWarningJSX","isInvalidKeyword","$0679bd6a754d6b5dc4bd6d12728fb6dc$exports","$45558476cf40d22e9b06e183cb1bed85$var$useInitFetch","_initFetch","isSearchLoading","isLoading","title","keywordsClassName","dispatchKeyword","onSelectKeyword","stopPropagation","parentElement","classList","toggle","onSelectKeywordLiElement","firstElementChild","_setSelectedPlatform","searchResultCount","searchResult","userID","FetchRequest","bookmarkData","statusCode","bookmarks","FetchSucceed","$9aff8cfd9f376916d76bedb4fa9007c1$var$fetchFail_QueryAllBookmarks","FetchFail","isUsed","onClose","$f4eed929cf53de9bb3dc8de52135f30a$var$post_AddComment","lectureID","commentData","post","$f4eed929cf53de9bb3dc8de52135f30a$var$patch_fixComment","_callee2","patch","commentID","$f4eed929cf53de9bb3dc8de52135f30a$var$delete_RemoveComment","_callee3","delete","$f4eed929cf53de9bb3dc8de52135f30a$var$get_QueryAllComments","_callee4","$54e14b1e43caf98ad2d29aca629d7f67$var$fetchFail_AddComment","$5102834e331a9be7c8a8175a087f76f4$var$fetchSucceed_FixComment","fixedCommentData","$5102834e331a9be7c8a8175a087f76f4$var$fetchFail_FixComment","$25556651e9f65ff60e4395e056aa554b$var$fetchSucceed_QueryAllComments","comments","$25556651e9f65ff60e4395e056aa554b$var$FetchFail_QueryAllComments","$05578968054a5a8d1f5e4d1009dbea0c$var$fetchSucceed_RemoveComment","$05578968054a5a8d1f5e4d1009dbea0c$var$fetchFail_RemoveComment","imageURL","altName","alt","loading","name","contents","setImageURL","setUserName","catch","curUser","userData","imageUrl","myUserID","_useState2","$4ef7915b147345da0ff4548e5d1ff9c9$var$_slicedToArray","_useState4","userName","thumbnailJSX","nameJSX","onSubmit","Alt","createdAt","comment","isMyComment","_ref$isMyComment","$cdc9a3be769881feeb8d697dbfdb8571$var$_slicedToArray","_useState6","setContents","setCreatedAt","contentsJSX","createdAtJSX","onDelete","onFix","myCommentButtonsJSX","$34b7d0bf2a7340a3ff8d675c7a0f9355$var$initComments","_queryAllComments","user","myComments","userAsync_QueryAllMyComments","otherComments","commentAsync_QueryAllComments","sessionStorage","getItem","newCommentJSX","myCommentsJSX","otherCommentsJSX","children","$d04c990351abcd245205294ed840d806$var$makeBookmarkIcon","$d04c990351abcd245205294ed840d806$var$_slicedToArray","isBookmarkEnabled","setIsBookmarkEnabled","onClickBookmarkIcon","localStorage","prv","BookmarkIcon_Disabled","BookmarkIcon_Enabled","platformIcon","marginRight","finalPrice","price","currencyID","currency","priceIcon","rating","ratingIcon","toFixed","sessionCount","sessionCountIcon","actualSessionCount","isCard","_ref$isCard","viewCount","viewCountIcon","eachSkills","skillIcon","description","language","languageIcon","instructor","link","href","lectureIdx","$c9dd99dc49a22609cc7f480ba3b4fecc$var$_slicedToArray","isOpened","setIsOpened","id","salePrices","actualPrice","openPopup","closePopup","lectureCardInfoJSX","lecturePopupInfoJSX","popupJSX","disable","_ref$disable","icon","iconRef","color","$e042959b63bc3dbbdcb70ddf9e50f620$var$useMoveToPreviousPage","currentPage","setCurrentPage","isDisabled","$e042959b63bc3dbbdcb70ddf9e50f620$var$useMoveToNextPage","totalPage","postsPerPage","$e042959b63bc3dbbdcb70ddf9e50f620$var$_slicedToArray","setTotalPage","pagedPosts","setPagedPosts","totalP","floor","slice","onMoveToNextPage","isMoveToNextPageDisabled","onMoveToPrevPage","isMoveToPrevPageDisabled","searchedLecturesLen","lectureCardsJSX","$42559a297f85aa56dfc3b9f82e14a57c$var$fetchBookmarks","_initFetchBookmarks","isSearchSucceed","isGridView","$e074f60f564a8b4517bfb2ffafc42c35$var$useInitFetch","_initFetchRandomCarouselImages","navType","AfterLogin","highlightBtnIdx","menuMode"],"version":3,"file":"Main.e85b390d.js.map"}